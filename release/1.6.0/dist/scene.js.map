{"version":3,"file":"scene.js","sources":["../src/easing.ts","../src/consts.ts","../src/PropertyObject.ts","../src/utils/property.ts","../src/utils.ts","../src/Animator.ts","../src/Frame.ts","../src/utils/dot.ts","../src/SceneItem.ts","../src/Scene.ts","../src/presets.ts","../src/index.umd.ts"],"sourcesContent":["import { between } from \"@daybrush/utils\";\nimport { EasingFunction } from \"./types\";\n\nfunction cubic(y1: number, y2: number, t: number) {\n  const t2 = 1 - t;\n\n  // Bezier Curve Formula\n  return t * t * t + 3 * t * t * t2 * y2 + 3 * t * t2 * t2 * y1;\n}\nfunction solveFromX(x1: number, x2: number, x: number) {\n  // x  0 ~ 1\n  // t 0 ~ 1\n  let t = x;\n  let solveX = x;\n  let dx = 1;\n\n  while (Math.abs(dx) > 1 / 1000) {\n    // 예상 t초에 의한 _x값\n    solveX = cubic(x1, x2, t);\n    dx = solveX - x;\n    // 차이가 미세하면 그 값을 t로 지정\n    if (Math.abs(dx) < 1 / 1000) {\n      return t;\n    }\n    t -= dx / 2;\n  }\n  return t;\n}\n/**\n * @namespace easing\n */\n/**\n* Cubic Bezier curve.\n* @memberof easing\n* @func bezier\n* @param {number} [x1] - point1's x\n* @param {number} [y1] - point1's y\n* @param {number} [x2] - point2's x\n* @param {number} [y2] - point2's y\n* @return {function} the curve function\n* @example\nimport {bezier} from \"scenejs\";\nScene.bezier(0, 0, 1, 1) // LINEAR\nScene.bezier(0.25, 0.1, 0.25, 1) // EASE\n*/\nexport function bezier(x1: number, y1: number, x2: number, y2: number) {\n  /*\n\t\tx = f(t)\n\t\tcalculate inverse function by x\n\t\tt = f-1(x)\n\t*/\n  const func: EasingFunction = (x: number) => {\n    const t = solveFromX(x1, x2, between(x, 0, 1));\n\n    return cubic(y1, y2, t);\n  };\n\n  func.easingName = `cubic-bezier(${x1},${y1},${x2},${y2})`;\n  return func;\n}\n/**\n* Specifies a stepping function\n* @see {@link https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp|CSS3 Timing Function}\n* @memberof easing\n* @func steps\n* @param {number} count - point1's x\n* @param {\"start\" | \"end\"} postion - point1's y\n* @return {function} the curve function\n* @example\nimport {steps} from \"scenejs\";\nScene.steps(1, \"start\") // Scene.STEP_START\nScene.steps(1, \"end\") // Scene.STEP_END\n*/\nexport function steps(count: number, position: \"start\" | \"end\") {\n  const func: EasingFunction = (time: number) => {\n    const level = 1 / count;\n\n    if (time >= 1) {\n      return 1;\n    }\n    return (position === \"start\" ? level : 0) + Math.floor(time / level) * level;\n  };\n\n  func.easingName = `steps(${count}, ${position})`;\n\n  return func;\n}\n\n/**\n* Equivalent to steps(1, start)\n* @memberof easing\n* @name STEP_START\n* @static\n* @type {function}\n* @example\nimport {STEP_START} from \"scenejs\";\nScene.STEP_START // steps(1, start)\n*/\nexport const STEP_START = /*#__PURE__#*/steps(1, \"start\");\n/**\n* Equivalent to steps(1, end)\n* @memberof easing\n* @name STEP_END\n* @static\n* @type {function}\n* @example\nimport {STEP_END} from \"scenejs\";\nScene.STEP_END // steps(1, end)\n*/\nexport const STEP_END = /*#__PURE__#*/steps(1, \"end\");\n/**\n* Linear Speed (0, 0, 1, 1)\n* @memberof easing\n* @name LINEAR\n* @static\n* @type {function}\n* @example\nimport {LINEAR} from \"scenejs\";\nScene.LINEAR\n*/\nexport const LINEAR = /*#__PURE__#*/bezier(0, 0, 1, 1);\n/**\n* Ease Speed (0.25, 0.1, 0.25, 1)\n* @memberof easing\n* @name EASE\n* @static\n* @type {function}\n* @example\nimport {EASE} from \"scenejs\";\nScene.EASE\n*/\nexport const EASE = /*#__PURE__#*/bezier(0.25, 0.1, 0.25, 1);\n/**\n* Ease In Speed (0.42, 0, 1, 1)\n* @memberof easing\n* @name EASE_IN\n* @static\n* @type {function}\n* @example\nimport {EASE_IN} from \"scenejs\";\nScene.EASE_IN\n*/\nexport const EASE_IN = /*#__PURE__#*/bezier(0.42, 0, 1, 1);\n/**\n* Ease Out Speed (0, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_OUT} from \"scenejs\";\nScene.EASE_OUT\n*/\nexport const EASE_OUT = /*#__PURE__#*/bezier(0, 0, 0.58, 1);\n/**\n* Ease In Out Speed (0.42, 0, 0.58, 1)\n* @memberof easing\n* @name EASE_IN_OUT\n* @static\n* @type {function}\n* @example\nimport {EASE_IN_OUT} from \"scenejs\";\nScene.EASE_IN_OUT\n*/\nexport const EASE_IN_OUT = /*#__PURE__#*/bezier(0.42, 0, 0.58, 1);\n","import { IObject } from \"@daybrush/utils\";\nimport { RoleObject, OptionType, EventType, EasingFunction } from \"./types\";\nimport { EASE, EASE_IN, EASE_IN_OUT, LINEAR, EASE_OUT, STEP_START, STEP_END } from \"./easing\";\n\nexport const PREFIX = \"__SCENEJS_\";\nexport const DATA_SCENE_ID = \"data-scene-id\";\nexport const TIMING_FUNCTION = \"animation-timing-function\";\nexport const ROLES: RoleObject = { transform: {}, filter: {}, attribute: {}, html: true };\nexport const ALIAS: IObject<string[]> = { easing: [TIMING_FUNCTION] };\nexport const FIXED = { [TIMING_FUNCTION]: true, contents: true, html: true };\nexport const MAXIMUM = 1000000;\nexport const THRESHOLD = 0.000001;\n\nexport const DURATION = \"duration\";\nexport const FILL_MODE = \"fillMode\";\nexport const DIRECTION = \"direction\";\nexport const ITERATION_COUNT = \"iterationCount\";\nexport const DELAY = \"delay\";\nexport const EASING = \"easing\";\nexport const PLAY_SPEED = \"playSpeed\";\nexport const EASING_NAME = \"easingName\";\nexport const ITERATION_TIME = \"iterationTime\";\nexport const PAUSED = \"paused\";\nexport const ENDED = \"ended\";\nexport const TIMEUPDATE = \"timeupdate\";\nexport const ANIMATE = \"animate\";\nexport const PLAY = \"play\";\nexport const RUNNING = \"running\";\nexport const ITERATION = \"iteration\";\nexport const START_ANIMATION = \"startAnimation\";\nexport const PAUSE_ANIMATION = \"pauseAnimation\";\nexport const ALTERNATE = \"alternate\";\nexport const REVERSE = \"reverse\";\nexport const ALTERNATE_REVERSE = \"alternate-reverse\";\nexport const NORMAL = \"normal\";\nexport const INFINITE = \"infinite\";\nexport const PLAY_STATE = \"playState\";\nexport const PLAY_CSS = \"playCSS\";\nexport const PREV_TIME = \"prevTime\";\nexport const TICK_TIME = \"tickTime\";\nexport const CURRENT_TIME = \"currentTime\";\nexport const SELECTOR = \"selector\";\nexport const TRANSFORM_NAME = \"transform\";\nexport const EASINGS = {\n    \"linear\": LINEAR,\n    \"ease\": EASE,\n    \"ease-in\": EASE_IN,\n    \"ease-out\": EASE_OUT,\n    \"ease-in-out\": EASE_IN_OUT,\n    \"step-start\": STEP_START,\n    \"step-end\": STEP_END,\n};\nexport const NAME_SEPARATOR = \"_///_\";\n/**\n* option name list\n* @name Scene.OPTIONS\n* @memberof Scene\n* @static\n* @type {$ts:OptionType}\n* @example\n* Scene.OPTIONS // [\"duration\", \"fillMode\", \"direction\", \"iterationCount\", \"delay\", \"easing\", \"playSpeed\"]\n*/\nexport const OPTIONS: OptionType = [DURATION, FILL_MODE, DIRECTION, ITERATION_COUNT, DELAY, EASING, PLAY_SPEED];\n\n/**\n* Event name list\n* @name Scene.EVENTS\n* @memberof Scene\n* @static\n* @type {$ts:EventType}\n* @example\n* Scene.EVENTS // [\"paused\", \"ended\", \"timeupdate\", \"animate\", \"play\", \"iteration\"];\n*/\nexport const EVENTS: EventType = [PAUSED, ENDED, TIMEUPDATE, ANIMATE, PLAY, ITERATION];\n","import { isString } from \"@daybrush/utils\";\nimport { PropertyObjectState } from \"./types\";\n\n/**\n* Make string, array to PropertyObject for the dot product\n*/\nclass PropertyObject implements PropertyObjectState {\n    public value: any[];\n    public prefix: string = \"\";\n    public suffix: string = \"\";\n    public model: string = \"\";\n    public type: string = \"\";\n    public separator: string = \",\";\n\n    /**\n      * @param - This value is in the array format.\n      * @param - options\n      * @example\n  var obj = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n       */\n    constructor(value: string | any[], options?: Partial<PropertyObjectState>) {\n        options && this.setOptions(options);\n        this.value = isString(value) ? value.split(this.separator) : value;\n    }\n    public setOptions(newOptions: Partial<PropertyObjectState>) {\n        for (const name in newOptions) {\n            this[name as keyof PropertyObjectState] = newOptions[name as keyof PropertyObjectState];\n        }\n        return this;\n    }\n    /**\n      * the number of values.\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.length);\n  // 3\n       */\n    public size() {\n        return this.value.length;\n    }\n    /**\n      * retrieve one of values at the index\n      * @param {Number} index - index\n      * @return {Object} one of values at the index\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n\n  console.log(obj1.get(0));\n  // 1\n       */\n    public get(index: number) {\n        return this.value[index];\n    }\n    /**\n      * Set the value at that index\n      * @param {Number} index - index\n      * @param {Object} value - text, a number, object to set\n      * @return {PropertyObject} An instance itself\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  obj1.set(0, 2);\n  console.log(obj1.toValue());\n  // 2,2,3\n       */\n    public set(index: number, value: any) {\n        this.value[index] = value;\n        return this;\n    }\n    /**\n      * create a copy of an instance itself.\n      * @return {PropertyObject} clone\n      * @example\n  const obj1 = new PropertyObject(\"1,2,3\", \",\");\n  const obj2 = obj1.clone();\n       */\n    public clone(): PropertyObject {\n        const {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        } = this;\n        const arr = this.value.map(v => ((v instanceof PropertyObject) ? v.clone() : v));\n        return new PropertyObject(arr, {\n            separator,\n            prefix,\n            suffix,\n            model,\n            type,\n        });\n    }\n    /**\n      * Make Property Object to String\n      * @return {String} Make Property Object to String\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  const obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\",\n  });\n  console.log(obj4.toValue());\n  // \"rgba(100,100,100,0.5)\"\n      */\n    public toValue(): string {\n        return this.prefix + this.join() + this.suffix;\n    }\n    /**\n      * Make Property Object's array to String\n      * @return {String} Join the elements of an array into a string\n      * @example\n      //rgba(100, 100, 100, 0.5)\n      var obj4 = new PropertyObject([100,100,100,0.5], {\n          \"separator\" : \",\",\n          \"prefix\" : \"rgba(\",\n          \"suffix\" : \")\"\n      });\n      obj4.join();  // =>   \"100,100,100,0.5\"\n       */\n    public join() {\n        return this.value.map(v => ((v instanceof PropertyObject) ? v.toValue() : v)).join(this.separator);\n    }\n    /**\n      * executes a provided function once per array element.\n      * @param {Function} callback - Function to execute for each element, taking three arguments\n      * @param {All} [callback.currentValue] The current element being processed in the array.\n      * @param {Number} [callback.index] The index of the current element being processed in the array.\n      * @param {Array} [callback.array] the array.\n      * @return {PropertyObject} An instance itself\n      * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach|MDN Array.forEach()} reference to MDN document.\n      * @example\n  //rgba(100, 100, 100, 0.5)\n  var obj4 = new PropertyObject([100,100,100,0.5], {\n      \"separator\" : \",\",\n      \"prefix\" : \"rgba(\",\n      \"suffix\" : \")\"\n  });\n\n  obj4.forEach(t => {\n      console.log(t);\n  });  // =>   \"100,100,100,0.5\"\n      */\n    public forEach(func: (value?: any, index?: number, array?: any[]) => void) {\n        this.value.forEach(func);\n        return this;\n    }\n}\nexport default PropertyObject;\n","/**\n* @namespace\n* @name Property\n*/\n\nimport PropertyObject from \"../PropertyObject\";\nimport {\n    COLOR_MODELS, isString,\n    splitComma, splitSpace, stringToRGBA,\n    RGBA, splitBracket, IObject, isArray, splitText\n} from \"@daybrush/utils\";\nimport { NameType } from \"../types\";\n\nexport function splitStyle(str: string) {\n\n    const properties = splitText(str, \";\");\n    const obj: IObject<string | PropertyObject> = {};\n    const totalLength = properties.length;\n    let length = totalLength;\n\n    for (let i = 0; i < totalLength; ++i) {\n        const matches = splitText(properties[i], \":\");\n\n        if (matches.length < 2 || !matches[1]) {\n            --length;\n            continue;\n        }\n        obj[matches[0].trim()] = toPropertyObject(matches[1].trim());\n    }\n    return { styles: obj, length };\n}\n/**\n* convert array to PropertyObject[type=color].\n* default model \"rgba\"\n* @memberof Property\n* @function arrayToColorObject\n* @param {Array|PropertyObject} value ex) [0, 0, 0, 1]\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\narrayToColorObject([0, 0, 0])\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0, 1], separator=\",\")\n*/\nexport function arrayToColorObject(arr: number[]) {\n    const model = RGBA;\n\n    if (arr.length === 3) {\n        arr[3] = 1;\n    }\n    return new PropertyObject(arr, {\n        model,\n        separator: \",\",\n        type: \"color\",\n        prefix: `${model}(`,\n        suffix: \")\",\n    });\n}\n/**\n* convert text with parentheses to object.\n* @memberof Property\n* @function stringToBracketObject\n* @param {String} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject\n* @example\nstringToBracketObject(\"abcde(0, 0, 0,1)\")\n// => PropertyObject(model=\"abcde\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToBracketObject(text: string) {\n    // [prefix, value, other]\n    const { prefix: model, value, suffix: afterModel } = splitBracket(text);\n\n    if (typeof value === \"undefined\") {\n        return text;\n    }\n    if (COLOR_MODELS.indexOf(model) > -1) {\n        return arrayToColorObject(stringToRGBA(text));\n    }\n    // divide comma(,)\n    const obj = toPropertyObject(value, model);\n\n    let arr = [value];\n    let separator = \",\";\n    let prefix = `${model}(`;\n    let suffix = `)${afterModel}`;\n\n    if (obj instanceof PropertyObject) {\n        separator = obj.separator;\n        arr = obj.value;\n        prefix += obj.prefix;\n        suffix = obj.suffix + suffix;\n    }\n    return new PropertyObject(arr, {\n        separator,\n        model,\n        prefix,\n        suffix,\n    });\n}\n\nexport function arrayToPropertyObject(arr: any[], separator: string) {\n    return new PropertyObject(arr, {\n        type: \"array\",\n        separator,\n    });\n}\n\n/**\n* convert text with parentheses to PropertyObject[type=color].\n* If the values are not RGBA model, change them RGBA mdoel.\n* @memberof Property\n* @function stringToColorObject\n* @param {String|PropertyObject} value ex) \"rgba(0,0,0,1)\"\n* @return {PropertyObject} PropertyObject[type=color]\n* @example\nstringToColorObject(\"rgba(0, 0, 0,1)\")\n// => PropertyObject(type=\"color\", model=\"rgba\", value=[0, 0, 0,1], separator=\",\")\n*/\nexport function stringToColorObject(value: string): string | PropertyObject {\n    const result = stringToRGBA(value);\n\n    return result ? arrayToColorObject(result) : value;\n}\n/**\n* convert CSS Value to PropertyObject\n* @memberof Property\n* @function toPropertyObject\n* @param {String} value it's text contains the array.\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @see referenced regular expression {@link http://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex}\n* @example\ntoPropertyObject(\"1px solid #000\");\n// => PropertyObject([\"1px\", \"solid\", rgba(0, 0, 0, 1)])\n*/\nexport function toPropertyObject(value: any[], model?: NameType): PropertyObject;\nexport function toPropertyObject(value: IObject<any>, model?: NameType): IObject<any>;\nexport function toPropertyObject(value: string, model?: NameType): PropertyObject | string;\nexport function toPropertyObject(value: string | IObject<any> | any[], model?: NameType) {\n    if (!isString(value)) {\n        if (isArray(value)) {\n            return arrayToPropertyObject(value, \",\");\n        }\n        return value;\n    }\n    let values: any = splitComma(value);\n\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \",\");\n    }\n    values = splitSpace(value);\n\n    if (values.length > 1) {\n        return arrayToPropertyObject(values.map(v => toPropertyObject(v)), \" \");\n    }\n    values = /^(['\"])([^'\"]*)(['\"])$/g.exec(value);\n\n    if (values && values[1] === values[3]) {\n        // Quotes\n        return new PropertyObject([toPropertyObject(values[2])], {\n            prefix: values[1],\n            suffix: values[1],\n        });\n    } else if (value.indexOf(\"(\") !== -1) {\n        // color\n        return stringToBracketObject(value);\n    } else if (value.charAt(0) === \"#\" && model !== \"url\") {\n        return stringToColorObject(value);\n    }\n    return value;\n}\nexport function toObject(object: PropertyObject, result: IObject<any> = {}) {\n    const model = object.model;\n\n    if (model) {\n        object.setOptions({\n            model: \"\",\n            suffix: \"\",\n            prefix: \"\",\n        });\n        const value = object.size() > 1 ? object : object.get(0);\n\n        result[model] = value;\n    } else {\n        object.forEach(obj => {\n            toObject(obj, result);\n        });\n    }\n    return result;\n}\n","import {\n    ROLES, MAXIMUM, FIXED, ALIAS,\n    RUNNING, PLAY, ENDED, PLAY_CSS, CURRENT_TIME, START_ANIMATION, EASINGS, NAME_SEPARATOR\n} from \"./consts\";\nimport PropertyObject from \"./PropertyObject\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport {\n    isArray, ANIMATION, ARRAY, OBJECT,\n    PROPERTY, STRING, NUMBER, IS_WINDOW, IObject, $, isObject, addEvent, removeEvent, isString,\n} from \"@daybrush/utils\";\nimport { EasingType, EasingFunction, NameType } from \"./types\";\nimport { toPropertyObject } from \"./utils/property\";\nimport { bezier, steps } from \"./easing\";\nimport Animator from \"./Animator\";\nimport Frame from \"./Frame\";\n\nexport function isPropertyObject(value: any): value is PropertyObject {\n    return value instanceof PropertyObject;\n}\nexport function setAlias(name: string, alias: string[]) {\n    ALIAS[name] = alias;\n}\nexport function setRole(names: string[], isProperty?: boolean, isFixedProperty?: boolean) {\n    const length = names.length;\n    let roles: any = ROLES;\n    let fixed: any = FIXED;\n\n    for (let i = 0; i < length - 1; ++i) {\n        !roles[names[i]] && (roles[names[i]] = {});\n        roles = roles[names[i]];\n        if (isFixedProperty) {\n            !fixed[names[i]] && (fixed[names[i]] = {});\n            fixed = fixed[names[i]];\n        }\n    }\n    isFixedProperty && (fixed[names[length - 1]] = true);\n    roles[names[length - 1]] = isProperty ? true : {};\n}\nexport function getType(value: any) {\n    const type = typeof value;\n\n    if (type === OBJECT) {\n        if (isArray(value)) {\n            return ARRAY;\n        } else if (isPropertyObject(value)) {\n            return PROPERTY;\n        }\n    } else if (type === STRING || type === NUMBER) {\n        return \"value\";\n    }\n    return type;\n}\nexport function isPureObject(obj: any): obj is object {\n    return isObject(obj) && obj.constructor === Object;\n}\nexport function getNames(names: IObject<any>, stack: string[]) {\n    let arr: string[][] = [];\n\n    if (isPureObject(names)) {\n        for (const name in names) {\n            stack.push(name);\n            arr = arr.concat(getNames(names[name], stack));\n            stack.pop();\n        }\n    } else {\n        arr.push(stack.slice());\n    }\n    return arr;\n}\nexport function updateFrame(names: IObject<any>, properties: IObject<any>) {\n    for (const name in properties) {\n        const value = properties[name];\n\n        if (!isPureObject(value)) {\n            names[name] = true;\n            continue;\n        }\n        if (!isObject(names[name])) {\n            names[name] = {};\n        }\n        updateFrame(names[name], properties[name]);\n    }\n    return names;\n}\nexport function toFixed(num: number) {\n    return Math.round(num * MAXIMUM) / MAXIMUM;\n}\nexport function getValueByNames(\n    names: Array<string | number>,\n    properties: IObject<any>, length: number = names.length) {\n    let value = properties;\n\n    for (let i = 0; i < length; ++i) {\n        if (!isObject(value) || value == null) {\n            return undefined;\n        }\n        value = value[names[i]];\n    }\n    return value;\n}\nexport function isInProperties(roles: IObject<any>, args: NameType[], isLast?: boolean) {\n    const length = args.length;\n    let role: any = roles;\n\n    if (length === 0) {\n        return false;\n    }\n    for (let i = 0; i < length; ++i) {\n        if (role === true) {\n            return false;\n        }\n        role = role[args[i]];\n        if (!role || (!isLast && role === true)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @memberof Scene\n * @param - Property names\n * @param - Whether the property is the last property that cannot be an object (non-partitionable)\n */\nexport function isRole(args: NameType[], isLast?: boolean): boolean {\n    return isInProperties(ROLES, args, isLast);\n}\nexport function isFixed(args: NameType[]) {\n    return isInProperties(FIXED, args, true);\n}\n\nexport interface IterationInterface {\n    currentTime: number;\n    iterationCount: number;\n    elapsedTime: number;\n}\nexport function setPlayCSS(item: Animator, isActivate: boolean) {\n    item.state[PLAY_CSS] = isActivate;\n}\nexport function isPausedCSS(item: Scene | SceneItem) {\n    return item.state[PLAY_CSS] && item.isPaused();\n}\nexport function isEndedCSS(item: Scene | SceneItem) {\n    return !item.isEnded() && item.state[PLAY_CSS];\n}\n\nexport function makeId(selector?: boolean) {\n    for (; ;) {\n        const id = `${Math.floor(Math.random() * 10000000)}`;\n\n        if (!IS_WINDOW || !selector) {\n            return id;\n        }\n        const checkElement = $(`[data-scene-id=\"${id}\"]`);\n\n        if (!checkElement) {\n            return id;\n        }\n    }\n}\nexport function getRealId(item: Scene | SceneItem) {\n    return item.getId() || item.setId(makeId(false)).getId();\n}\nexport function toId(text: number | string) {\n    return `${text}`.match(/[0-9a-zA-Z]+/g).join(\"\");\n}\nexport function playCSS(\n    item: Scene | SceneItem, isExportCSS?: boolean,\n    playClassName?: string, properties: object = {}) {\n    if (!ANIMATION || item.getPlayState() === RUNNING) {\n        return;\n    }\n    const className = playClassName || START_ANIMATION;\n\n    if (isPausedCSS(item)) {\n        item.addPlayClass(true, className, properties);\n    } else {\n        if (item.isEnded()) {\n            item.setTime(0);\n        }\n        isExportCSS && item.exportCSS({ className });\n        const el = item.addPlayClass(false, className, properties);\n\n        if (!el) {\n            return;\n        }\n        addAnimationEvent(item, el);\n        setPlayCSS(item, true);\n    }\n    item.setPlayState(RUNNING);\n}\n\nexport function addAnimationEvent(item: Animator, el: Element) {\n    const state = item.state;\n    const duration = item.getDuration();\n    const isZeroDuration = !duration || !isFinite(duration);\n    const animationend = () => {\n        setPlayCSS(item, false);\n        item.finish();\n    };\n    const animationstart = () => {\n        item.trigger(PLAY);\n\n        addEvent(el, \"animationcancel\", animationend);\n        addEvent(el, \"animationend\", animationend);\n        addEvent(el, \"animationiteration\", animationiteration);\n    };\n    item.once(ENDED, () => {\n        removeEvent(el, \"animationcancel\", animationend);\n        removeEvent(el, \"animationend\", animationend);\n        removeEvent(el, \"animationiteration\", animationiteration);\n        removeEvent(el, \"animationstart\", animationstart);\n    });\n    const animationiteration = ({ elapsedTime }: any) => {\n        const currentTime = elapsedTime;\n        const iterationCount = isZeroDuration ? 0 : (currentTime / duration);\n\n        state[CURRENT_TIME] = currentTime;\n        item.setIteration(iterationCount);\n    };\n    addEvent(el, \"animationstart\", animationstart);\n}\n\nexport function getEasing(curveArray: string | number[] | EasingFunction): EasingType {\n    let easing: EasingType;\n\n    if (isString(curveArray)) {\n        if (curveArray in EASINGS) {\n            easing = EASINGS[curveArray];\n        } else {\n            const obj = toPropertyObject(curveArray);\n\n            if (isString(obj)) {\n                return 0;\n            } else {\n                if (obj.model === \"cubic-bezier\") {\n                    curveArray = obj.value.map(v => parseFloat(v));\n                    easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n                } else if (obj.model === \"steps\") {\n                    easing = steps(parseFloat(obj.value[0]), obj.value[1]);\n                } else {\n                    return 0;\n                }\n            }\n        }\n    } else if (isArray(curveArray)) {\n        easing = bezier(curveArray[0], curveArray[1], curveArray[2], curveArray[3]);\n    } else {\n        easing = curveArray;\n    }\n\n    return easing;\n}\n\nexport function isScene(value: any): value is Scene {\n    return value && !!(value.constructor as typeof Scene).prototype.getItem;\n}\nexport function isSceneItem(value: any): value is SceneItem {\n    return (\n        value && !!(value.constructor as typeof SceneItem).prototype.getFrame\n    );\n}\nexport function isFrame(value: any): value is Frame {\n    return value && !!(value.constructor as typeof Frame).prototype.toCSS;\n}\nexport function flatSceneObject(obj: IObject<any>, seperator: string): Record<string, Frame> {\n    const newObj = {};\n\n    for (const name in obj) {\n        const value = obj[name];\n\n        if (isFrame(value)) {\n            newObj[name] = value;\n        } else if (isObject(value)) {\n            const nextObj = flatSceneObject(value, seperator);\n\n            for (const nextName in nextObj) {\n                newObj[`${name}${seperator}${nextName}`] = nextObj[nextName];\n            }\n        }\n    }\n    return newObj;\n}\n","import {\n    THRESHOLD,\n    ALTERNATE, ALTERNATE_REVERSE, REVERSE, INFINITE, NORMAL,\n    ITERATION_COUNT, DELAY, FILL_MODE, DIRECTION, PLAY_SPEED,\n    DURATION, EASING, ITERATION_TIME, EASING_NAME, PAUSED,\n    RUNNING, PLAY, TIMEUPDATE, ENDED, PLAY_STATE, PREV_TIME, TICK_TIME, CURRENT_TIME, ITERATION, OPTIONS} from \"./consts\";\nimport { toFixed, getEasing } from \"./utils\";\nimport { splitUnit, isString, camelize, requestAnimationFrame, cancelAnimationFrame } from \"@daybrush/utils\";\nimport {\n    IterationCountType, DirectionType, AnimatorState,\n    EasingFunction, FillModeType, PlayStateType, EasingType, AnimatorOptions, AnimatorEvents,\n} from \"./types\";\nimport EventEmitter from \"@scena/event-emitter\";\n\nfunction GetterSetter<T extends new (...args: any[]) => {}>(\n    getter: string[], setter: string[], parent: string) {\n    return (constructor: T) => {\n        const prototype = constructor.prototype;\n\n        getter.forEach(name => {\n            prototype[camelize(`get ${name}`)] = function() {\n                return this[parent][name];\n            };\n        });\n        setter.forEach(name => {\n            prototype[camelize(`set ${name}`)] = function(value: any) {\n                this[parent][name] = value;\n                return this;\n            };\n        });\n    };\n}\nexport function isDirectionReverse(iteration: number, iteraiontCount: IterationCountType, direction: DirectionType) {\n    if (direction === REVERSE) {\n        return true;\n    } else if (iteraiontCount !== INFINITE && iteration === iteraiontCount && iteraiontCount % 1 === 0) {\n        return direction === (iteration % 2 >= 1 ? ALTERNATE_REVERSE : ALTERNATE);\n    }\n    return direction === (iteration % 2 >= 1 ? ALTERNATE : ALTERNATE_REVERSE);\n}\n/**\n* @typedef {Object} AnimatorState The Animator options. Properties used in css animation.\n* @property {number} [duration] The duration property defines how long an animation should take to complete one cycle.\n* @property {\"none\"|\"forwards\"|\"backwards\"|\"both\"} [fillMode] The fillMode property specifies a style for the element when the animation is not playing (before it starts, after it ends, or both).\n* @property {\"infinite\"|number} [iterationCount] The iterationCount property specifies the number of times an animation should be played.\n* @property {array|function} [easing] The easing(timing-function) specifies the speed curve of an animation.\n* @property {number} [delay] The delay property specifies a delay for the start of an animation.\n* @property {\"normal\"|\"reverse\"|\"alternate\"|\"alternate-reverse\"} [direction] The direction property defines whether an animation should be played forwards, backwards or in alternate cycles.\n*/\n\nconst setters = [\"id\", ITERATION_COUNT, DELAY, FILL_MODE,\n    DIRECTION, PLAY_SPEED, DURATION, PLAY_SPEED, ITERATION_TIME, PLAY_STATE];\nconst getters = [...setters, EASING, EASING_NAME];\n\n/**\n* play video, animation, the others\n* @extends EventEmitter\n* @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n*/\n@GetterSetter(getters, setters, \"state\")\nclass Animator <\n    Options extends AnimatorOptions = AnimatorOptions,\n    State extends AnimatorState = AnimatorState,\n    Events extends {} = {},\n> extends EventEmitter<AnimatorEvents & Events> {\n    public state: State;\n    private timerId: number = 0;\n\n    /**\n     * @param - animator's options\n     * @example\n  const animator = new Animator({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n     */\n    constructor(options?: Partial<Options & AnimatorOptions>) {\n        super();\n        this.state = {\n            id: \"\",\n            easing: 0,\n            easingName: \"linear\",\n            iterationCount: 1,\n            delay: 0,\n            fillMode: \"forwards\",\n            direction: NORMAL,\n            playSpeed: 1,\n            currentTime: 0,\n            iterationTime: -1,\n            iteration: 0,\n            tickTime: 0,\n            prevTime: 0,\n            playState: PAUSED,\n            duration: 0,\n        } as State;\n        this.setOptions(options);\n    }\n    /**\n      * set animator's easing.\n      * @param curverArray - The speed curve of an animation.\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.easing.EASE,\n  });\n      */\n    public setEasing(curveArray: string | number[] | EasingFunction): this {\n        const easing: EasingType = getEasing(curveArray);\n        const easingName = easing && easing[EASING_NAME] || \"linear\";\n        const state = this.state;\n\n        state[EASING] = easing;\n        state[EASING_NAME] = easingName;\n        return this;\n    }\n    /**\n      * set animator's options.\n      * @see {@link https://www.w3schools.com/css/css3_animations.asp|CSS3 Animation}\n      * @param - animator's options\n      * @return {Animator} An instance itself.\n      * @example\n  animator.({\n      delay: 2,\n      diretion: \"alternate\",\n      duration: 2,\n      fillMode: \"forwards\",\n      iterationCount: 3,\n      easing: Scene.eaasing.EASE,\n  });\n      */\n    public setOptions(options: Partial<AnimatorOptions> = {}): this {\n        for (const name in options) {\n            const value = options[name];\n\n            if (name === EASING) {\n                this.setEasing(value);\n                continue;\n            } else if (name === DURATION) {\n                value && this.setDuration(value);\n                continue;\n            }\n            if (OPTIONS.indexOf(name as any) > -1) {\n                this.state[name] = value;\n            }\n        }\n\n        return this;\n    }\n    /**\n      * Get the animator's total duration including delay\n      * @return {number} Total duration\n      * @example\n  animator.getTotalDuration();\n      */\n    public getTotalDuration(): number {\n        return this.getActiveDuration(true);\n    }\n    /**\n      * Get the animator's total duration excluding delay\n      * @return {number} Total duration excluding delay\n      * @example\n  animator.getActiveDuration();\n      */\n    public getActiveDuration(delay?: boolean): number {\n        const state = this.state;\n        const count = state[ITERATION_COUNT];\n        if (count === INFINITE) {\n            return Infinity;\n        }\n        return (delay ? state[DELAY] : 0) + this.getDuration() * count;\n    }\n    /**\n      * Check if the animator has reached the end.\n      * @return {boolean} ended\n      * @example\n  animator.isEnded(); // true or false\n      */\n    public isEnded(): boolean {\n        if (this.state[TICK_TIME] === 0 && this.state[PLAY_STATE] === PAUSED) {\n            return true;\n        } else if (this.getTime() < this.getActiveDuration()) {\n            return false;\n        }\n        return true;\n    }\n    /**\n      *Check if the animator is paused:\n      * @return {boolean} paused\n      * @example\n  animator.isPaused(); // true or false\n      */\n    public isPaused(): boolean {\n        return this.state[PLAY_STATE] === PAUSED;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const state = this.state;\n\n        state[PLAY_STATE] = RUNNING;\n\n        if (state[TICK_TIME] >= delay) {\n            /**\n             * This event is fired when play animator.\n             * @event Animator#play\n             */\n            this.trigger<\"play\", AnimatorEvents[\"play\"]>(PLAY);\n            return true;\n        }\n        return false;\n    }\n    /**\n      * play animator\n      * @return {Animator} An instance itself.\n      */\n    public play(toTime?: number) {\n        const state = this.state;\n        const delay = state[DELAY];\n        const currentTime = this.getTime();\n\n        state[PLAY_STATE] = RUNNING;\n\n        if (this.isEnded() && (currentTime === 0 || currentTime >= this.getActiveDuration())) {\n            this.setTime(-delay, true);\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            state[PREV_TIME] = time;\n            this.tick(time, toTime);\n        });\n        this.start();\n        return this;\n    }\n    /**\n      * pause animator\n      * @return {Animator} An instance itself.\n      */\n    public pause(): this {\n        const state = this.state;\n\n        if (state[PLAY_STATE] !== PAUSED) {\n            state[PLAY_STATE] = PAUSED;\n            /**\n             * This event is fired when animator is paused.\n             * @event Animator#paused\n             */\n            this.trigger<\"paused\", AnimatorEvents[\"paused\"]>(PAUSED);\n        }\n        cancelAnimationFrame(this.timerId);\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public finish() {\n        this.setTime(0);\n        this.state[TICK_TIME] = 0;\n        this.end();\n        return this;\n    }\n    /**\n       * end animator\n       * @return {Animator} An instance itself.\n      */\n    public end() {\n        this.pause();\n        /**\n             * This event is fired when animator is ended.\n             * @event Animator#ended\n             */\n        this.trigger<\"ended\", AnimatorEvents[\"ended\"]>(ENDED);\n        return this;\n    }\n    /**\n      * set currentTime\n      * @param {Number|String} time - currentTime\n      * @return {Animator} An instance itself.\n      * @example\n\n  animator.setTime(\"from\"); // 0\n  animator.setTime(\"to\"); // 100%\n  animator.setTime(\"50%\");\n  animator.setTime(10);\n  animator.getTime() // 10\n      */\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean) {\n        const activeDuration = this.getActiveDuration();\n        const state = this.state;\n        const prevTime = state[TICK_TIME];\n        const delay = state[DELAY];\n        let currentTime = isTick ? (time as number) : this.getUnitTime(time);\n\n        state[TICK_TIME] = delay + currentTime;\n        if (currentTime < 0) {\n            currentTime = 0;\n        } else if (currentTime > activeDuration) {\n            currentTime = activeDuration;\n        }\n        state[CURRENT_TIME] = currentTime;\n        this.calculate();\n\n        if (isTick && !isParent) {\n            const tickTime = state[TICK_TIME];\n\n            if (prevTime < delay && time >= 0) {\n                this.start(0);\n            }\n            if (tickTime < prevTime || this.isEnded()) {\n                this.end();\n                return;\n            }\n        }\n        if (this.isDelay()) {\n            return this;\n        }\n        /**\n             * This event is fired when the animator updates the time.\n             * @event Animator#timeupdate\n             * @param {Object} param The object of data to be sent to an event.\n             * @param {Number} param.currentTime The total time that the animator is running.\n             * @param {Number} param.time The iteration time during duration that the animator is running.\n             * @param {Number} param.iterationCount The iteration count that the animator is running.\n             */\n        this.trigger<\"timeupdate\", AnimatorEvents[\"timeupdate\"]>(TIMEUPDATE, {\n            currentTime,\n            time: this.getIterationTime(),\n            iterationCount: state[ITERATION],\n        });\n\n        return this;\n    }\n    /**\n      * Get the animator's current time\n      * @return {number} current time\n      * @example\n  animator.getTime();\n      */\n    public getTime(): number {\n        return this.state[CURRENT_TIME];\n    }\n    public getUnitTime(time: string | number) {\n        if (isString(time)) {\n            const duration = this.getDuration() || 100;\n\n            if (time === \"from\") {\n                return 0;\n            } else if (time === \"to\") {\n                return duration;\n            }\n            const { unit, value } = splitUnit(time);\n\n            if (unit === \"%\") {\n                !this.getDuration() && (this.setDuration(duration));\n                return toFixed(parseFloat(time) / 100 * duration);\n            } else if (unit === \">\") {\n                return value + THRESHOLD;\n            } else {\n                return value;\n            }\n        } else {\n            return toFixed(time);\n        }\n    }\n    /**\n       * Check if the current state of animator is delayed.\n       * @return {boolean} check delay state\n       */\n    public isDelay() {\n        const state = this.state;\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n\n        return delay > 0 && (tickTime < delay);\n    }\n    public setIteration(iterationCount: number): this {\n        const state = this.state;\n        const passIterationCount = Math.floor(iterationCount);\n        const maxIterationCount = state[ITERATION_COUNT] === INFINITE ? Infinity : state[ITERATION_COUNT];\n\n        if (state[ITERATION] < passIterationCount && passIterationCount < maxIterationCount) {\n            /**\n                  * The event is fired when an iteration of an animation ends.\n                  * @event Animator#iteration\n                  * @param {Object} param The object of data to be sent to an event.\n                  * @param {Number} param.currentTime The total time that the animator is running.\n                  * @param {Number} param.iterationCount The iteration count that the animator is running.\n                  */\n            this.trigger<\"iteration\", AnimatorEvents[\"iteration\"]>(ITERATION, {\n                currentTime: state[CURRENT_TIME],\n                iterationCount: passIterationCount,\n            });\n        }\n        state[ITERATION] = iterationCount;\n        return this;\n    }\n    protected calculate() {\n        const state = this.state;\n        const iterationCount = state[ITERATION_COUNT];\n        const fillMode = state[FILL_MODE];\n        const direction = state[DIRECTION];\n        const duration = this.getDuration();\n        const time = this.getTime();\n        const iteration = duration === 0 ? 0 : time / duration;\n        let currentIterationTime = duration ? time % duration : 0;\n\n        if (!duration) {\n            this.setIterationTime(0);\n            return this;\n        }\n        this.setIteration(iteration);\n\n        // direction : normal, reverse, alternate, alternate-reverse\n        // fillMode : forwards, backwards, both, none\n        const isReverse = isDirectionReverse(iteration, iterationCount, direction);\n\n        const isFiniteDuration = isFinite(duration);\n        if (isFiniteDuration && isReverse) {\n            currentIterationTime = duration - currentIterationTime;\n        }\n        if (isFiniteDuration && iterationCount !== INFINITE) {\n            const isForwards = fillMode === \"both\" || fillMode === \"forwards\";\n\n            // fill forwards\n            if (iteration >= iterationCount) {\n                currentIterationTime = duration * (isForwards ? (iterationCount % 1) || 1 : 0);\n                isReverse && (currentIterationTime = duration - currentIterationTime);\n            }\n        }\n        this.setIterationTime(currentIterationTime);\n        return this;\n    }\n    private tick(now: number, to?: number) {\n        if (this.isPaused()) {\n            return;\n        }\n        const state = this.state;\n        const playSpeed = state[PLAY_SPEED];\n        const prevTime = state[PREV_TIME];\n        const delay = state[DELAY];\n        const tickTime = state[TICK_TIME];\n        const currentTime = tickTime + Math.min(1000, now - prevTime) / 1000 * playSpeed;\n\n        state[PREV_TIME] = now;\n        this.setTime(currentTime - delay, true);\n        if (to && to * 1000 < now) {\n            this.pause();\n        }\n        if (state[PLAY_STATE] === PAUSED) {\n            return;\n        }\n\n        this.timerId = requestAnimationFrame((time: number) => {\n            this.tick(time, to);\n        });\n    }\n}\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#setId\n * @param {number | string} - String or number of id to be set in the animator\n * @return {Animator} An instance itself.\n */\n/**\n * Specifies the unique indicator of the animator\n * @method Animator#getId\n * @return {number | string} the indicator of the item.\n */\n/**\n * Get a delay for the start of an animation.\n * @method Animator#getDelay\n * @return {number} delay\n */\n/**\n * Set a delay for the start of an animation.\n * @method Animator#setDelay\n * @param {number} delay - delay\n * @return {Animator} An instance itself.\n */\n/**\n * Get fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#getFillMode\n * @return {FillModeType} fillMode\n */\n/**\n * Set fill mode for the item when the animation is not playing (before it starts, after it ends, or both)\n * @method Animator#setFillMode\n * @param {FillModeType} fillMode - fillMode\n * @return {Animator} An instance itself.\n */\n/**\n * Get the number of times an animation should be played.\n * @method Animator#getIterationCount\n * @return {IterationCountType} iterationCount\n */\n/**\n * Set the number of times an animation should be played.\n * @method Animator#setIterationCount\n * @param {IterationCountType} iterationCount - iterationCount\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#getDirection\n * @return {DirectionType} direction\n */\n/**\n * Set whether an animation should be played forwards, backwards or in alternate cycles.\n * @method Animator#setDirection\n * @param {DirectionType} direction - direction\n * @return {Animator} An instance itself.\n */\n/**\n * Get whether the animation is running or paused.\n * @method Animator#getPlayState\n * @return {PlayStateType} playState\n */\n/**\n * Set whether the animation is running or paused.\n * @method Animator#setPlayState\n * @param {PlayStateType} playState - playState\n * @return {Animator} An instance itself.\n */\n/**\n * Get the animator's play speed\n * @method Animator#getPlaySpeed\n * @return {number} playSpeed\n */\n/**\n * Set the animator's play speed\n * @method Animator#setPlaySpeed\n * @param {number} playSpeed - playSpeed\n * @return {Animator} An instance itself.\n */\n/**\n * Get how long an animation should take to complete one cycle.\n * @method Animator#getDuration\n * @return {number} duration\n */\n/**\n * Set how long an animation should take to complete one cycle.\n * @method Animator#setDuration\n * @param {number} duration - duration\n * @return {Animator} An instance itself.\n */\n/**\n * Get the speed curve of an animation.\n * @method Animator#getEasing\n * @return {EasingType} easing\n */\n/**\n * Get the speed curve's name\n * @method Animator#getEasingName\n * @return {string} the curve's name.\n */\n/**\n\t* Get the animator's current iteration time\n\t* @method Animator#getIterationTime\n\t* @return {number} current iteration time\n\t* @example\nanimator.getIterationTime();\n\t*/\n\n// tslint:disable-next-line:interface-name\ninterface Animator <\n    Options extends AnimatorOptions = AnimatorOptions,\n    State extends AnimatorState = AnimatorState,\n    Events extends {} = {},\n> extends EventEmitter<AnimatorEvents & Events> {\n    setId(id: number | string): this;\n    getId(): number | string;\n    getIterationTime(): number;\n    setIterationTime(time: number): this;\n    setDelay(delay: number): this;\n    getDelay(): number;\n    setFillMode(fillMode: FillModeType): this;\n    getFillMode(): FillModeType;\n    setIterationCount(iterationCount: IterationCountType): this;\n    getIterationCount(): IterationCountType;\n    setDirection(direction: DirectionType): this;\n    getDirection(): DirectionType;\n    setPlayState(playState: PlayStateType): this;\n    getPlayState(): PlayStateType;\n    setPlaySpeed(playSpeed: number): this;\n    getPlaySpeed(): number;\n    setDuration(duration: number): this;\n    getDuration(): number;\n    getEasing(): EasingType;\n    getEasingName(): string;\n}\nexport default Animator;\n","import {\n    ALIAS, TIMING_FUNCTION, TRANSFORM_NAME, EASING_NAME, NAME_SEPARATOR\n} from \"./consts\";\nimport { isRole, getType, isPropertyObject, getValueByNames, isFixed, getNames, getEasing } from \"./utils\";\nimport { toPropertyObject, splitStyle, toObject } from \"./utils/property\";\nimport {\n    isObject, isArray, isString, getKeys,\n    ANIMATION, TRANSFORM, FILTER, PROPERTY, FUNCTION, ARRAY, OBJECT, IObject, isUndefined,\n    sortOrders,\n} from \"@daybrush/utils\";\nimport { NameType, KeyValueChildren } from \"./types\";\nimport OrderMap from \"order-map\";\n\nfunction toInnerProperties(obj: IObject<string>, orders: NameType[] = []) {\n    if (!obj) {\n        return \"\";\n    }\n    const arrObj = [];\n\n    const keys = getKeys(obj);\n\n    sortOrders(keys, orders);\n\n    keys.forEach(name => {\n        arrObj.push(`${name.replace(/\\d$/g, \"\")}(${obj[name]})`);\n    });\n\n    return arrObj.join(\" \");\n}\n\n/* eslint-disable */\nfunction clone(target: IObject<any>, toValue = false) {\n    return merge({}, target, toValue);\n}\nfunction merge(to: IObject<any>, from: IObject<any>, toValue = false) {\n    for (const name in from) {\n        const value = from[name];\n        const type = getType(value);\n\n        if (type === PROPERTY) {\n            to[name] = toValue ? value.toValue() : value.clone();\n        } else if (type === FUNCTION) {\n            to[name] = toValue ? getValue([name], value) : value;\n        } else if (type === ARRAY) {\n            to[name] = value.slice();\n        } else if (type === OBJECT) {\n            if (isObject(to[name]) && !isPropertyObject(to[name])) {\n                merge(to[name], value, toValue);\n            } else {\n                to[name] = clone(value, toValue);\n            }\n        } else {\n            to[name] = from[name];\n        }\n    }\n    return to;\n}\n/* eslint-enable */\n\nfunction getPropertyName(args: NameType[]) {\n    return args[0] in ALIAS ? ALIAS[args[0]] : args;\n}\nfunction getValue(names: NameType[], value: any): any {\n    const type = getType(value);\n\n    if (type === PROPERTY) {\n        return value.toValue();\n    } else if (type === FUNCTION) {\n        if (names[0] !== TIMING_FUNCTION) {\n            return getValue(names, value());\n        }\n    } else if (type === OBJECT) {\n        return clone(value, true);\n    }\n    return value;\n}\n/**\n* Animation's Frame\n*/\nclass Frame {\n    public properties: IObject<any> = {};\n    public orderMap: OrderMap = new OrderMap(NAME_SEPARATOR);\n    /**\n     * @param - properties\n     * @example\n  const frame = new Scene.Frame({\n      display: \"none\"\n      transform: {\n          translate: \"50px\",\n          scale: \"5, 5\",\n      }\n  });\n     */\n    constructor(properties: any = {}) {\n        this.properties = {};\n        // this.orders = [];\n        this.set(properties);\n    }\n    /**\n      * get property value\n      * @param {...Number|String|PropertyObject} args - property name or value\n      * @example\n      frame.get(\"display\") // => \"none\", \"block\", ....\n      frame.get(\"transform\", \"translate\") // => \"10px,10px\"\n      */\n    public get(...args: NameType[]) {\n        const value = this.raw(...args);\n\n        return getValue(getPropertyName(args), value);\n    }\n    /**\n      * get properties orders\n      * @param - property names\n      * @example\n      frame.getOrders([\"display\"]) // => []\n      frame.getOrders([\"transform\"]) // => [\"translate\", \"scale\"]\n      */\n    public getOrders(names: NameType[]): NameType[] | undefined {\n        return this.orderMap.get(names);\n    }\n    /**\n      * set properties orders\n      * @param - property names\n      * @param - orders\n      * @example\n      frame.getOrders([\"transform\"]) // => [\"translate\", \"scale\"]\n      frame.setOrders([\"transform\"], [\"scale\", \"tralsate\"])\n      */\n    public setOrders(names: NameType[], orders: NameType[]): NameType[] {\n        return this.orderMap.set(names, orders);\n    }\n    /**\n      * get properties order object\n      * @example\n      console.log(frame.getOrderObject());\n      */\n    public getOrderObject() {\n        return this.orderMap.getObject();\n    }\n    /**\n      * set properties orders object\n      * @param - properties orders object\n      * @example\n      frame.setOrderObject({\n          \"\": [\"transform\"],\n          \"transform\": [\"scale\", \"tralsate\"],\n      });\n      */\n    public setOrderObject(obj: IObject<NameType[]>) {\n        this.orderMap.setObject(obj);\n    }\n\n    /**\n      * get property keys\n      * @param - property names\n      * @example\n      frame.gets(\"display\") // => []\n      frame.gets(\"transform\") // => [\"translate\"]\n      */\n    public getKeys(...args: NameType[]): string[] {\n        const value = this.raw(...args);\n        const keys = getType(value) === OBJECT ? getKeys(value) : [];\n\n        sortOrders(keys, this.orderMap.get(args));\n        return keys;\n    }\n    /**\n      * get properties array\n      * @param - property names\n      * @example\n      frame.gets(\"display\") // => []\n      frame.gets(\"transform\") // => [{ key: \"translate\", value: \"10px, 10px\", children: [] }]\n      */\n    public gets(...args: NameType[]): KeyValueChildren[] {\n        const values = this.get(...args);\n        const keys = this.getKeys(...args);\n\n        return keys.map(key => {\n            const nextValue = values[key];\n            return { key, value: nextValue, children: this.gets(...args, key) };\n        });\n    }\n\n    public raw(...args: NameType[]) {\n        return getValueByNames(getPropertyName(args), this.properties);\n    }\n    /**\n      * remove property value\n      * @param {...String} args - property name\n      * @return {Frame} An instance itself\n      * @example\n      frame.remove(\"display\")\n      */\n    public remove(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return this;\n        }\n        this.orderMap.remove(params);\n        const value = getValueByNames(params, this.properties, length - 1);\n\n        if (isObject(value)) {\n            delete value[params[length - 1]];\n        }\n        return this;\n    }\n    /**\n      * set property\n      * @param {...Number|String|PropertyObject} args - property names or values\n      * @return {Frame} An instance itself\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n      filter: {\n          brightness: \"50%\",\n          grayscale: \"100%\"\n      }\n  });\n\n  // two parameters\n  frame.set(\"transform\", {\n      translate: \"10px, 10px\",\n      scale: \"1\",\n  });\n\n  // three parameters\n  frame.set(\"transform\", \"translate\", \"50px\");\n    */\n    public set(...args: any[]) {\n        const self = this;\n        const length = args.length;\n        const params = args.slice(0, -1);\n        const value = args[length - 1];\n        const firstParam = params[0];\n\n        if (length === 1 && value instanceof Frame) {\n            self.merge(value);\n        } else if (firstParam in ALIAS) {\n            self._set(ALIAS[firstParam], value);\n        } else if (length === 2 && isArray(firstParam)) {\n            self._set(firstParam, value);\n        } else if (isPropertyObject(value)) {\n            if (isRole(params)) {\n                self.set(...params, toObject(value));\n            } else {\n                self._set(params, value);\n            }\n        } else if (isArray(value)) {\n            self._set(params, value);\n        } else if (isObject(value)) {\n            if (!self.has(...params) && isRole(params)) {\n                self._set(params, {});\n            }\n            for (const name in value) {\n                self.set(...params, name, value[name]);\n            }\n        } else if (isString(value)) {\n            if (isRole(params, true)) {\n                if (isFixed(params) || !isRole(params)) {\n                    this._set(params, value);\n                } else {\n                    const obj = toPropertyObject(value);\n\n                    if (isObject(obj)) {\n                        self.set(...params, obj);\n                    }\n                }\n                return this;\n            } else {\n                const { styles, length: stylesLength } = splitStyle(value);\n\n                for (const name in styles) {\n                    self.set(...params, name, styles[name]);\n                }\n                if (stylesLength) {\n                    return this;\n                }\n            }\n            self._set(params, value);\n        } else {\n            self._set(params, value);\n        }\n        return self;\n    }\n    /**\n      * Gets the names of properties.\n      * @return the names of properties.\n      * @example\n  // one parameter\n  frame.set({\n      display: \"none\",\n      transform: {\n          translate: \"10px, 10px\",\n          scale: \"1\",\n      },\n  });\n\n  // [[\"display\"], [\"transform\", \"translate\"], [\"transform\", \"scale\"]]\n  console.log(frame.getNames());\n    */\n    public getNames(): string[][] {\n        return getNames(this.properties, []);\n    }\n    /**\n      * check that has property.\n      * @param {...String} args - property name\n      * @example\n      frame.has(\"property\", \"display\") // => true or false\n      */\n    public has(...args: NameType[]) {\n        const params = getPropertyName(args);\n        const length = params.length;\n\n        if (!length) {\n            return false;\n        }\n        return !isUndefined(getValueByNames(params, this.properties, length));\n    }\n    /**\n      * clone frame.\n      * @return {Frame} An instance of clone\n      * @example\n      frame.clone();\n      */\n    public clone() {\n        const frame = new Frame();\n\n        frame.setOrderObject(this.orderMap.orderMap);\n        return frame.merge(this);\n    }\n    /**\n      * merge one frame to other frame.\n      * @param - target frame.\n      * @return {Frame} An instance itself\n      * @example\n      frame.merge(frame2);\n      */\n    public merge(frame: Frame) {\n        const properties = this.properties;\n        const frameProperties = frame.properties;\n\n        if (frameProperties) {\n            merge(properties, frameProperties);\n        }\n        return this;\n    }\n    /**\n      * Specifies an css object that coverted the frame.\n      * @return {object} cssObject\n      */\n    public toCSSObject() {\n        const properties = this.get();\n        const cssObject: IObject<string> = {};\n\n        for (const name in properties) {\n            if (isRole([name], true)) {\n                continue;\n            }\n            const value = properties[name];\n\n            if (name === TIMING_FUNCTION) {\n                cssObject[TIMING_FUNCTION.replace(\"animation\", ANIMATION)] =\n                    (isString(value) ? value : value[EASING_NAME]) || \"initial\";\n            } else {\n                cssObject[name] = value;\n            }\n        }\n        const transform = toInnerProperties(properties[TRANSFORM_NAME], this.orderMap.get([TRANSFORM_NAME]));\n        const filter = toInnerProperties(properties.filter, this.orderMap.get([FILTER]));\n\n        TRANSFORM && transform && (cssObject[TRANSFORM] = transform);\n        FILTER && filter && (cssObject[FILTER] = filter);\n        return cssObject;\n    }\n    /**\n      * Specifies an css text that coverted the frame.\n      * @return {string} cssText\n      */\n    public toCSS() {\n        const cssObject = this.toCSSObject();\n        const cssArray = [];\n        const keys = getKeys(cssObject);\n\n        sortOrders(keys, this.orderMap.get([]));\n        keys.forEach(name => {\n            cssArray.push(`${name}:${cssObject[name]};`);\n        });\n        return cssArray.join(\"\");\n    }\n    /**\n      * Remove All Properties\n      * @return {Frame} An instance itself\n      */\n    public clear() {\n        this.properties = {};\n        this.orderMap.clear();\n        return this;\n    }\n    private _set(args: NameType[], value: any) {\n        let properties = this.properties;\n        const length = args.length;\n\n        for (let i = 0; i < length - 1; ++i) {\n            const name = args[i];\n\n            !(name in properties) && (properties[name] = {});\n            properties = properties[name];\n        }\n        if (!length) {\n            return;\n        }\n        const lastParam = args[length - 1];\n\n        this.orderMap.add(args);\n        if (length === 1 && lastParam === TIMING_FUNCTION) {\n            properties[lastParam] = getEasing(value);\n        } else {\n            properties[lastParam] = isString(value) && !isFixed(args)\n                ? toPropertyObject(value, lastParam)\n                : value;\n        }\n    }\n}\nexport default Frame;\n","\nimport PropertyObject from \"../PropertyObject\";\nimport { getType } from \"../utils\";\nimport { toPropertyObject } from \"./property\";\nimport { splitUnit, PROPERTY, FUNCTION, ARRAY, dot as dotNumber } from \"@daybrush/utils\";\nimport { EasingType } from \"../types\";\n\nfunction dotArray(a1: any[], a2: any, b1: number, b2: number): any {\n  const length = a2.length;\n\n  return a1.map((v1, i) => {\n    if (i >= length) {\n      return v1;\n    } else {\n      return dot(v1, a2[i], b1, b2);\n    }\n  });\n}\n\nfunction dotColor(color1: PropertyObject, color2: PropertyObject, b1: number, b2: number) {\n  // convert array to PropertyObject(type=color)\n  const value1 = color1.value;\n  const value2 = color2.value;\n  // If the model name is not same, the inner product is impossible.\n  const model1 = color1.model;\n  const model2 = color2.model;\n\n  if (model1 !== model2) {\n    // It is recognized as a string.\n    return dot(color1.toValue(), color2.toValue(), b1, b2);\n  }\n  if (value1.length === 3) {\n    value1[3] = 1;\n  }\n  if (value2.length === 3) {\n    value2[3] = 1;\n  }\n  const v = dotArray(value1, value2, b1, b2);\n  const colorModel = model1;\n\n  for (let i = 0; i < 3; ++i) {\n    v[i] = parseInt(v[i], 10);\n  }\n  const object = new PropertyObject(v, {\n    type: \"color\",\n    model: colorModel,\n    prefix: `${colorModel}(`,\n    suffix: \")\",\n  });\n\n  return object;\n}\n\nfunction dotObject(a1: PropertyObject, a2: PropertyObject, b1: number, b2: number) {\n  const a1Type = a1.type;\n\n  if (a1Type === \"color\") {\n    return dotColor(a1, a2, b1, b2);\n  }\n  const value1 = a1.value;\n  const value2 = a2.value;\n  const arr = dotArray(value1, value2, b1, b2);\n\n  return new PropertyObject(arr, {\n    type: a1Type,\n    separator: a1.separator || a2.separator,\n    prefix: a1.prefix || a2.prefix,\n    suffix: a1.suffix || a2.suffix,\n    model: a1.model || a2.model,\n  });\n}\n/**\n* The dot product of a1 and a2 for the b1 and b2.\n* @memberof Dot\n* @function dot\n* @param {String|Number|PropertyObject} a1 value1\n* @param {String|Number|PropertyObject} a2 value2\n* @param {Number} b1 b1 ratio\n* @param {Number} b2 b2 ratio\n* @return {String} Not Array, Not Separator, Only Number & Unit\n* @return {PropertyObject} Array with Separator.\n* @example\ndot(1, 3, 0.3, 0.7);\n// => 1.6\n*/\nexport function dot(a1: any, a2: any, b1: number, b2: number): any {\n  if (b2 === 0) {\n    return a2;\n  } else if (b1 === 0 || b1 + b2 === 0) {\n    // prevent division by zero.\n    return a1;\n  }\n  // dot Object\n\n  const type1 = getType(a1);\n  const type2 = getType(a2);\n  const isFunction1 = type1 === FUNCTION;\n  const isFunction2 = type2 === FUNCTION;\n\n  if (isFunction1 || isFunction2) {\n    return () => {\n      return dot(isFunction1 ? toPropertyObject(a1()) : a1, isFunction2 ? toPropertyObject(a2()) : a2, b1, b2);\n    };\n  } else if (type1 === type2) {\n    if (type1 === PROPERTY) {\n      return dotObject(a1, a2, b1, b2);\n    } else if (type1 === ARRAY) {\n      return dotArray(a1, a2, b1, b2);\n    } else if (type1 !== \"value\") {\n      return a1;\n    }\n  } else {\n    return a1;\n  }\n  const v1 = splitUnit(`${a1}`);\n  const v2 = splitUnit(`${a2}`);\n  let v;\n\n  // 숫자가 아닐경우 첫번째 값을 반환 b2가 0일경우 두번째 값을 반환\n  if (isNaN(v1.value) || isNaN(v2.value)) {\n    return a1;\n  } else {\n    v = dotNumber(v1.value, v2.value, b1, b2);\n  }\n  const prefix = v1.prefix || v2.prefix;\n  const unit = v1.unit || v2.unit;\n\n  if (!prefix && !unit) {\n    return v;\n  }\n  return prefix + v + unit;\n}\n\nexport function dotValue(\n  time: number,\n  prevTime: number,\n  nextTime: number,\n  prevValue: any,\n  nextValue: any,\n  easing?: EasingType) {\n  if (time === prevTime) {\n    return prevValue;\n  } else if (time === nextTime) {\n    return nextValue;\n  } else if (!easing) {\n    return dot(prevValue, nextValue, time - prevTime, nextTime - time);\n  }\n  const ratio = easing((time - prevTime) / (nextTime - prevTime));\n  const value = dot(prevValue, nextValue, ratio, 1 - ratio);\n\n  return value;\n}\n","import Animator, { isDirectionReverse } from \"./Animator\";\nimport Frame from \"./Frame\";\nimport {\n    toFixed,\n    isFixed,\n    playCSS,\n    toId,\n    getRealId,\n    makeId,\n    isPausedCSS,\n    isRole,\n    getValueByNames,\n    isEndedCSS,\n    setPlayCSS,\n    getNames,\n    updateFrame,\n} from \"./utils\";\nimport { dotValue } from \"./utils/dot\";\nimport {\n    START_ANIMATION,\n    PREFIX, THRESHOLD,\n    TIMING_FUNCTION, ALTERNATE, ALTERNATE_REVERSE, INFINITE,\n    REVERSE, EASING, FILL_MODE, DIRECTION, ITERATION_COUNT,\n    EASING_NAME, DELAY, PLAY_SPEED, DURATION, PAUSE_ANIMATION,\n    DATA_SCENE_ID, SELECTOR, ROLES, NAME_SEPARATOR\n} from \"./consts\";\nimport {\n    isObject, isArray, isUndefined, decamelize,\n    ANIMATION, fromCSS, addClass, removeClass, hasClass,\n    KEYFRAMES, isFunction,\n    IObject, $, splitComma, toArray, isString, IArrayFormat,\n    dot as dotNumber,\n    find,\n    findIndex,\n    getKeys,\n    sortOrders,\n} from \"@daybrush/utils\";\nimport {\n    NameType, AnimateElement, AnimatorState,\n    SceneItemState, SceneItemOptions, EasingType, PlayCondition, DirectionType, SceneItemEvents\n} from \"./types\";\nimport OrderMap from \"order-map\";\nimport styled, { InjectResult, StyledInjector } from \"css-styled\";\n\nfunction getNearTimeIndex(times: number[], time: number) {\n    const length = times.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (times[i] === time) {\n            return [i, i];\n        } else if (times[i] > time) {\n            return [i > 0 ? i - 1 : 0, i];\n        }\n    }\n    return [length - 1, length - 1];\n}\nfunction makeAnimationProperties(properties: object) {\n    const cssArray = [];\n\n    for (const name in properties) {\n        cssArray.push(`${ANIMATION}-${decamelize(name)}:${properties[name]};`);\n    }\n    return cssArray.join(\"\");\n}\nfunction addTime(times: number[], time: number) {\n    const length = times.length;\n    for (let i = 0; i < length; ++i) {\n        if (time < times[i]) {\n            times.splice(i, 0, time);\n            return;\n        }\n    }\n    times[length] = time;\n}\nfunction addEntry(entries: number[][], time: number, keytime: number) {\n    const prevEntry = entries[entries.length - 1];\n\n    (!prevEntry || prevEntry[0] !== time || prevEntry[1] !== keytime) &&\n        entries.push([toFixed(time), toFixed(keytime)]);\n}\nexport function getEntries(times: number[], states: AnimatorState[]) {\n    let entries = times.map(time => ([time, time]));\n    let nextEntries = [];\n\n    states.forEach(state => {\n        const iterationCount = state[ITERATION_COUNT] as number;\n        const delay = state[DELAY];\n        const playSpeed = state[PLAY_SPEED];\n        const direction = state[DIRECTION];\n        const intCount = Math.ceil(iterationCount);\n        const currentDuration = entries[entries.length - 1][0];\n        const length = entries.length;\n        const lastTime = currentDuration * iterationCount;\n\n        for (let i = 0; i < intCount; ++i) {\n            const isReverse =\n                direction === REVERSE ||\n                direction === ALTERNATE && i % 2 ||\n                direction === ALTERNATE_REVERSE && !(i % 2);\n\n            for (let j = 0; j < length; ++j) {\n                const entry = entries[isReverse ? length - j - 1 : j];\n                const time = entry[1];\n                const currentTime = currentDuration * i + (isReverse ? currentDuration - entry[0] : entry[0]);\n                const prevEntry = entries[isReverse ? length - j : j - 1];\n\n                if (currentTime > lastTime) {\n                    if (j !== 0) {\n                        const prevTime = currentDuration * i +\n                            (isReverse ? currentDuration - prevEntry[0] : prevEntry[0]);\n                        const divideTime = dotNumber(prevEntry[1], time, lastTime - prevTime, currentTime - lastTime);\n\n                        addEntry(nextEntries, (delay + currentDuration * iterationCount) / playSpeed, divideTime);\n                    }\n                    break;\n                } else if (\n                    currentTime === lastTime\n                    && nextEntries.length\n                    && nextEntries[nextEntries.length - 1][0] === lastTime + delay\n                ) {\n                    break;\n                }\n                addEntry(nextEntries, (delay + currentTime) / playSpeed, time);\n            }\n        }\n        // delay time\n        delay && nextEntries.unshift([0, nextEntries[0][1]]);\n\n        entries = nextEntries;\n        nextEntries = [];\n    });\n\n    return entries;\n}\n/**\n* manage Frame Keyframes and play keyframes.\n* @extends Animator\n* @example\nconst item = new SceneItem({\n\t0: {\n\t\tdisplay: \"none\",\n\t},\n\t1: {\n\t\tdisplay: \"block\",\n\t\topacity: 0,\n\t},\n\t2: {\n\t\topacity: 1,\n\t}\n});\n*/\nclass SceneItem extends Animator<SceneItemOptions, SceneItemState, SceneItemEvents> {\n    public times: number[] = [];\n    public items: IObject<Frame> = {};\n    public nameMap = new OrderMap(NAME_SEPARATOR);\n    public elements: AnimateElement[] = [];\n    public styled: StyledInjector;\n    public styledInjector: InjectResult;\n    public temp: Frame;\n    private needUpdate: boolean = true;\n    private target: any;\n    private targetFunc: (frame: Frame) => void;\n\n    /**\n      * @param - properties\n      * @param - options\n      * @example\n      const item = new SceneItem({\n          0: {\n              display: \"none\",\n          },\n          1: {\n              display: \"block\",\n              opacity: 0,\n          },\n          2: {\n              opacity: 1,\n          }\n      });\n       */\n    constructor(properties?: any, options?: Partial<SceneItemOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        const times = this.times;\n        const length = times.length;\n\n        return (length === 0 ? 0 : times[length - 1]) || this.state[DURATION];\n    }\n    /**\n      * get size of list\n      * @return {Number} length of list\n      */\n    public size() {\n        return this.times.length;\n    }\n    public setDuration(duration: number) {\n        if (!duration) {\n            return this;\n        }\n        const originalDuration = this.getDuration();\n\n        if (originalDuration > 0) {\n            const ratio = duration / originalDuration;\n            const { times, items } = this;\n            const obj: IObject<Frame> = {};\n\n            this.times = times.map(time => {\n                const time2 = toFixed(time * ratio);\n\n                obj[time2] = items[time];\n\n                return time2;\n            });\n            this.items = obj;\n        } else {\n            this.newFrame(duration);\n        }\n        return this;\n    }\n    public setId(id?: number | string) {\n        const state = this.state;\n        const elements = this.elements;\n        const length = elements.length;\n\n        state.id = id || makeId(!!length);\n\n        if (length && !state[SELECTOR]) {\n            const sceneId = toId(this.getId());\n\n            state[SELECTOR] = `[${DATA_SCENE_ID}=\"${sceneId}\"]`;\n            elements.forEach(element => {\n                element.setAttribute(DATA_SCENE_ID, sceneId);\n            });\n        }\n        return this;\n    }\n\n    /**\n      * Set properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.set(0, \"a\", \"b\") // item.getFrame(0).set(\"a\", \"b\")\n  console.log(item.get(0, \"a\")); // \"b\"\n      */\n    public set(time: any, ...args: any[]) {\n        if (time instanceof SceneItem) {\n            return this.set(0, time);\n        } else if (isArray(time)) {\n            const length = time.length;\n\n            for (let i = 0; i < length; ++i) {\n                const t = length === 1 ? 0 : this.getUnitTime(`${i / (length - 1) * 100}%`);\n\n                this.set(t, time[i]);\n            }\n        } else if (isObject(time)) {\n            for (const t in time) {\n                const value = time[t];\n\n                splitComma(t).forEach(eachTime => {\n                    const realTime = this.getUnitTime(eachTime);\n\n                    if (isNaN(realTime)) {\n                        getNames(value, [eachTime]).forEach(names => {\n                            const innerValue = getValueByNames(names.slice(1), value);\n                            const arr = isArray(innerValue) ?\n                                innerValue : [getValueByNames(names, this.target), innerValue];\n                            const length = arr.length;\n\n                            for (let i = 0; i < length; ++i) {\n                                this.newFrame(`${i / (length - 1) * 100}%`).set(...names, arr[i]);\n                            }\n                        });\n                    } else {\n                        this.set(realTime, value);\n                    }\n                });\n            }\n        } else if (!isUndefined(time)) {\n            const value = args[0];\n\n            splitComma(time + \"\").forEach(eachTime => {\n                const realTime = this.getUnitTime(eachTime);\n\n                if (value instanceof SceneItem) {\n                    const delay = value.getDelay();\n                    const frames = value.toObject(!this.hasFrame(realTime + delay));\n                    const duration = value.getDuration();\n                    const direction = value.getDirection();\n                    const isReverse = direction.indexOf(\"reverse\") > -1;\n\n                    for (const frameTime in frames) {\n                        const nextTime = isReverse ? duration - parseFloat(frameTime) : parseFloat(frameTime);\n                        this.set(realTime + nextTime, frames[frameTime]);\n                    }\n                } else if (args.length === 1 && isArray(value)) {\n                    value.forEach((item: any) => {\n                        this.set(realTime, item);\n                    });\n                } else {\n                    const frame = this.newFrame(realTime);\n\n                    frame.set(...args);\n                }\n            });\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Get properties of the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} args property's name or properties\n      * @return {Number|String|PropertyObejct} property value\n      * @example\n  item.get(0, \"a\"); // item.getFrame(0).get(\"a\");\n  item.get(0, \"transform\", \"translate\"); // item.getFrame(0).get(\"transform\", \"translate\");\n      */\n    public get(time: string | number, ...args: NameType[]) {\n        const frame = this.getFrame(time);\n\n        return frame && frame.get(...args);\n    }\n    /**\n      * get properties orders\n      * @param - property names\n      * @example\n      item.getOrders([\"display\"]) // => []\n      item.getOrders([\"transform\"]) // => [\"translate\", \"scale\"]\n      */\n    public getOrders(names: NameType[]): NameType[] | undefined {\n        this.needUpdate && this.update();\n\n        return this.nameMap.get(names);\n    }\n    /**\n      * set properties orders\n      * @param - property names\n      * @param - orders\n      * @example\n      item.getOrders([\"transform\"]) // => [\"translate\", \"scale\"]\n      item.setOrders([\"transform\"], [\"scale\", \"tralsate\"])\n      */\n    public setOrders(names: NameType[], orders: NameType[]): NameType[] {\n        this.needUpdate && this.update();\n\n        const result = this.nameMap.set(names, orders);\n\n        this.updateFrameOrders();\n\n        return result;\n    }\n    /**\n      * get properties order object\n      * @example\n      console.log(item.getOrderObject());\n      */\n     public getOrderObject() {\n        return this.nameMap.getObject();\n    }\n    /**\n      * set properties orders object\n      * @param - properties orders object\n      * @example\n      item.setOrderObject({\n          \"\": [\"transform\"],\n          \"transform\": [\"scale\", \"tralsate\"],\n      });\n      */\n    public setOrderObject(obj: IObject<NameType[]>) {\n        this.nameMap.setObject(obj);\n\n        this.updateFrameOrders();\n    }\n    public remove(time: string | number, ...args: any[]): this;\n    /**\n      * remove properties to the sceneItem at that time\n      * @param {Number} time - time\n      * @param {...String|Object} [properties] - property names or values\n      * @return {SceneItem} An instance itself\n      * @example\n  item.remove(0, \"a\");\n      */\n    public remove(time: string | number, ...args: NameType[]) {\n        if (args.length) {\n            const frame = this.getFrame(time);\n\n            frame && frame.remove(...args);\n        } else {\n            this.removeFrame(time);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * Append the item or object at the last time.\n      * @param - the scene item or item object\n      * @return An instance itself\n      * @example\n  item.append(new SceneItem({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  }));\n  item.append({\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n  item.set(item.getDuration(), {\n      0: {\n          opacity: 0,\n      },\n      1: {\n          opacity: 1,\n      }\n  });\n      */\n    public append(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            this.set(this.getDuration(), item);\n        } else {\n            this.append(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n      * Push the front frames for the time and prepend the scene item or item object.\n      * @param - the scene item or item object\n      * @return An instance itself\n      */\n    public prepend(item: SceneItem | IObject<any>) {\n        if (item instanceof SceneItem) {\n            const unshiftTime = item.getDuration() + item.getDelay();\n            const firstFrame = this.getFrame(0);\n            // remove first frame\n            this.removeFrame(0);\n            this.unshift(unshiftTime);\n            this.set(0, item);\n            this.set(unshiftTime + THRESHOLD, firstFrame);\n        } else {\n            this.prepend(new SceneItem(item));\n        }\n        return this;\n    }\n    /**\n     * Push out the amount of time.\n     * @param - time to push\n     * @example\n   item.get(0); // frame 0\n   item.unshift(3);\n   item.get(3) // frame 0\n     */\n    public unshift(time: number) {\n        const { times, items } = this;\n        const obj: IObject<Frame> = {};\n\n        this.times = times.map(t => {\n            const time2 = toFixed(time + t);\n\n            obj[time2] = items[t];\n            return time2;\n        });\n        this.items = obj;\n        return this;\n    }\n    /**\n     * Get the frames in the item in object form.\n     * @return {}\n     * @example\n item.toObject();\n // {0: {display: \"none\"}, 1: {display: \"block\"}}\n     */\n    public toObject(isStartZero = true): IObject<Frame> {\n        const obj: IObject<Frame> = {};\n        const delay = this.getDelay();\n\n        this.forEach((frame: Frame, time: number) => {\n            obj[(!time && !isStartZero ? THRESHOLD : 0) + delay + time] = frame.clone();\n        });\n        return obj;\n    }\n    /**\n     * Specifies an element to synchronize items' keyframes.\n     * @param {string} selectors - Selectors to find elements in items.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setSelector(\"#id.class\");\n     */\n    public setSelector(target: string | boolean | ((id: number | string) => string)) {\n        if (isFunction(target)) {\n            this.setElement(target(this.getId()));\n        } else {\n            this.setElement(target);\n        }\n        return this;\n    }\n    /**\n     * Get the elements connected to SceneItem.\n     */\n    public getElements(): AnimateElement[] {\n        return this.elements;\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElements(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>): this {\n        return this.setElement(target);\n    }\n    /**\n     * Specifies an element to synchronize item's keyframes.\n     * @param - elements to synchronize item's keyframes.\n     * @param - Make sure that you have peusdo.\n     * @return {SceneItem} An instance itself\n     * @example\nitem.setElement(document.querySelector(\"#id.class\"));\nitem.setElement(document.querySelectorAll(\".class\"));\n     */\n    public setElement(target: boolean | string | AnimateElement | IArrayFormat<AnimateElement>) {\n        const state = this.state;\n        let elements: AnimateElement[] = [];\n\n        if (!target) {\n            return this;\n        } else if (target === true || isString(target)) {\n            const selector = target === true ? `${state.id}` : target;\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(selector);\n\n            elements = toArray($(matches ? matches[1] : selector, true));\n            state[SELECTOR] = selector;\n        } else {\n            elements = (target instanceof Element) ? [target] : toArray(target);\n        }\n        if (!elements.length) {\n            return this;\n        }\n        this.elements = elements;\n        this.setId(this.getId());\n        this.target = elements[0].style;\n        this.targetFunc = (frame: Frame) => {\n            const attributes = frame.get(\"attribute\");\n\n            if (attributes) {\n                for (const name in attributes) {\n                    elements.forEach(el => {\n                        el.setAttribute(name, attributes[name]);\n                    });\n                }\n            }\n            if (frame.has(\"html\")) {\n                const html = frame.get(\"html\");\n\n                elements.forEach(el => {\n                    el.innerHTML = html;\n                });\n            }\n            const cssText = frame.toCSS();\n\n            if (state.cssText !== cssText) {\n                state.cssText = cssText;\n\n                elements.forEach(el => {\n                    el.style.cssText += cssText;\n                });\n                return frame;\n            }\n        };\n        return this;\n    }\n    public setTarget(target: any): this {\n        this.target = target;\n        this.targetFunc = (frame: Frame) => {\n            const obj = frame.get();\n\n            for (const name in obj) {\n                target[name] = obj[name];\n            }\n        };\n        return this;\n    }\n    /**\n      * add css styles of items's element to the frame at that time.\n      * @param - Time to synchronize and set css\n      * @param - elements to synchronize item's keyframes.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setElement(document.querySelector(\"#id.class\"));\n  item.setCSS(0, [\"opacity\"]);\n  item.setCSS(0, [\"opacity\", \"width\", \"height\"]);\n      */\n    public setCSS(time: number, properties: string[] = []) {\n        this.set(time, fromCSS(this.elements, properties));\n        return this;\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n        const frame = this.getNowFrame(iterationTime, easing);\n        const currentTime = this.getTime();\n\n        this.temp = frame;\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event SceneItem#animate\n         * @param {Number} param.currentTime The total time that the animator is running.\n         * @param {Number} param.time The iteration time during duration that the animator is running.\n         * @param {Frame} param.frame frame of that time.\n         */\n        this.trigger(\"animate\", {\n            frame,\n            currentTime,\n            time: iterationTime,\n        });\n        this.targetFunc && this.targetFunc(frame);\n        return this;\n    }\n    /**\n      * update property names used in frames.\n      * @return {SceneItem} An instance itself\n      * @example\n  item.update();\n      */\n    public update() {\n        const prevNameMap = this.nameMap;\n        const names = {};\n        this.forEach(frame => {\n            updateFrame(names, frame.properties);\n        });\n\n        const nameMap = new OrderMap(NAME_SEPARATOR);\n\n        function pushKeys(map: IObject<any>, stack: NameType[]) {\n            const keys = getKeys(map);\n\n            sortOrders(keys, prevNameMap.get(stack));\n\n            nameMap.set(stack, keys);\n            keys.forEach(key => {\n                const nextMap = map[key];\n                if (isObject(nextMap)) {\n                    pushKeys(nextMap, [...stack, key]);\n                }\n            });\n        }\n        pushKeys(names, []);\n\n        this.nameMap = nameMap;\n\n        this.forEach(frame => {\n            frame.setOrderObject(nameMap.orderMap);\n        });\n        this.needUpdate = false;\n        return this;\n    }\n    /**\n      * Create and add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} Created frame.\n      * @example\n  item.newFrame(time);\n      */\n    public newFrame(time: string | number) {\n        let frame = this.getFrame(time);\n\n        if (frame) {\n            return frame;\n        }\n        frame = new Frame();\n\n        this.setFrame(time, frame);\n        return frame;\n    }\n    /**\n      * Add a frame to the sceneItem at that time\n      * @param {Number} time - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.setFrame(time, frame);\n      */\n    public setFrame(time: string | number, frame: Frame) {\n        const realTime = this.getUnitTime(time);\n\n        this.items[realTime] = frame;\n        addTime(this.times, realTime);\n        this.needUpdate = true;\n        return this;\n    }\n    public getFrame(time: number | string, ...names: any[]): Frame;\n    /**\n      * get sceneItem's frame at that time\n      * @param {Number} time - frame's time\n      * @return {Frame} sceneItem's frame at that time\n      * @example\n  const frame = item.getFrame(time);\n      */\n    public getFrame(time: number | string) {\n        return this.items[this.getUnitTime(time)];\n    }\n    public removeFrame(time: number | string, ...names: any[]): this;\n    /**\n      * remove sceneItem's frame at that time\n      * @param - frame's time\n      * @return {SceneItem} An instance itself\n      * @example\n  item.removeFrame(time);\n      */\n    public removeFrame(time: number | string) {\n        const realTime = this.getUnitTime(time);\n        const items = this.items;\n        const index = this.times.indexOf(realTime);\n\n        delete items[realTime];\n\n        // remove time\n        if (index > -1) {\n            this.times.splice(index, 1);\n        }\n        this.needUpdate = true;\n        return this;\n    }\n    /**\n      * check if the item has a frame at that time\n      * @param {Number} time - frame's time\n      * @return {Boolean} true: the item has a frame // false: not\n      * @example\n  if (item.hasFrame(10)) {\n      // has\n  } else {\n      // not\n  }\n      */\n    public hasFrame(time: number | string) {\n        return this.getUnitTime(time) in this.items;\n    }\n    /**\n      * Check if keyframes has propery's name\n      * @param - property's time\n      * @return {boolean} true: if has property, false: not\n      * @example\n    item.hasName([\"transform\", \"translate\"]); // true or not\n      */\n    public hasName(args: string[]) {\n        this.needUpdate && this.update();\n        return !!this.nameMap.get(args);\n    }\n    /**\n      * merge frame of the previous time at the next time.\n    * @param - The time of the frame to merge\n    * @param - The target frame\n      * @return {SceneItem} An instance itself\n      * @example\n  // getFrame(1) contains getFrame(0)\n  item.merge(0, 1);\n      */\n    public mergeFrame(time: number | string, frame: Frame) {\n        if (frame) {\n            const toFrame = this.newFrame(time);\n\n            toFrame.merge(frame);\n        }\n        return this;\n    }\n    /**\n      * Get frame of the current time\n      * @param {Number} time - the current time\n      * @param {function} easing - the speed curve of an animation\n      * @return {Frame} frame of the current time\n      * @example\n  let item = new SceneItem({\n      0: {\n          display: \"none\",\n      },\n      1: {\n          display: \"block\",\n          opacity: 0,\n      },\n      2: {\n          opacity: 1,\n      }\n  });\n  // opacity: 0.7; display:\"block\";\n  const frame = item.getNowFrame(1.7);\n      */\n    public getNowFrame(time: number, parentEasing?: EasingType, isAccurate?: boolean) {\n        this.needUpdate && this.update();\n        const frame = new Frame();\n        const [left, right] = getNearTimeIndex(this.times, time);\n        let realEasing = this.getEasing() || parentEasing;\n        let nameMap = this.nameMap;\n\n        if (this.hasName([TIMING_FUNCTION])) {\n            const nowEasing = this.getNowValue(time, [TIMING_FUNCTION], left, right, false, 0, true);\n\n            isFunction(nowEasing) && (realEasing = nowEasing);\n        }\n        if (isAccurate) {\n            const prevFrame = this.getFrame(time);\n            const prevOrderMap = prevFrame.orderMap.filter([], orders => {\n                return prevFrame.has(...orders);\n            });\n\n            for (const name in ROLES) {\n                const orders = nameMap.get([name]);\n                if (prevOrderMap.get([name]) && orders) {\n                    prevOrderMap.set([name], orders);\n                }\n            }\n            nameMap = prevOrderMap;\n        }\n        const names = nameMap.gets([]);\n\n        frame.setOrderObject(nameMap.orderMap);\n        names.forEach(properties => {\n            const value = this.getNowValue(time, properties, left, right, isAccurate, realEasing, isFixed(properties));\n\n            if (isUndefined(value)) {\n                return;\n            }\n            frame.set(properties, value);\n        });\n        return frame;\n    }\n    /**\n     * Get the current computed frame. (If needUpdate is true, get a new computed frame, not the temp that has already been saved.)\n     */\n    public getCurrentFrame(needUpdate?: boolean, parentEasing?: EasingType): Frame {\n        const iterationTime = this.getIterationTime();\n\n        const frame = needUpdate || this.needUpdate || !this.temp\n            ? this.getComputedFrame(iterationTime, parentEasing)\n            : this.temp;\n\n        this.temp = frame;\n\n        return frame;\n    }\n    /**\n     * Get the computed frame corresponding to the time.\n     */\n    public getComputedFrame(time: number, parentEasing?: EasingType, isAccurate?: boolean): Frame {\n        return this.getNowFrame(time, parentEasing, isAccurate);\n    }\n    public load(properties: any = {}, options = properties.options) {\n        options && this.setOptions(options);\n\n        if (isArray(properties)) {\n            this.set(properties);\n        } else if (properties.keyframes) {\n            this.set(properties.keyframes);\n        } else {\n            for (const time in properties) {\n                if (time !== \"options\") {\n                    this.set({\n                        [time]: properties[time],\n                    });\n                }\n            }\n        }\n        if (options && options[DURATION]) {\n            this.setDuration(options[DURATION]);\n        }\n        return this;\n    }\n    /**\n       * clone SceneItem.\n       * @return {SceneItem} An instance of clone\n       * @example\n       * item.clone();\n       */\n    public clone() {\n        const item = new SceneItem();\n\n        item.setOptions(this.state);\n        item.setOrderObject(this.nameMap.orderMap);\n\n        this.forEach((frame: Frame, time: number) => {\n            item.setFrame(time, frame.clone());\n        });\n        return item;\n    }\n    /**\n       * executes a provided function once for each scene item.\n       * @param - Function to execute for each element, taking three arguments\n       * @return {Keyframes} An instance itself\n       */\n    public forEach(callback: (item: Frame, time: number, items: IObject<Frame>) => void) {\n        const times = this.times;\n        const items = this.items;\n\n        times.forEach(time => {\n            callback(items[time], time, items);\n        });\n        return this;\n    }\n    public setOptions(options: Partial<SceneItemOptions> = {}) {\n        super.setOptions(options);\n        const { id, selector, elements, element, target } = options;\n\n        id && this.setId(id);\n        if (target) {\n            this.setTarget(target);\n        } else if (selector) {\n            this.setSelector(selector);\n        } else if (elements || element) {\n            this.setElement(elements || element);\n        }\n        return this;\n    }\n    public toCSS(\n        playCondition: PlayCondition = { className: START_ANIMATION },\n        parentDuration = this.getDuration(), states: AnimatorState[] = []) {\n        const itemState = this.state;\n        const selector = itemState[SELECTOR];\n\n        if (!selector) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        itemState[DURATION] = originalDuration;\n        states.push(itemState);\n\n        const reversedStates = toArray(states).reverse();\n        const id = toId(getRealId(this));\n        const superParent = states[0];\n        const infiniteIndex = findIndex(reversedStates, state => {\n            return state[ITERATION_COUNT] === INFINITE || !isFinite(state[DURATION]);\n        }, states.length - 1);\n        const finiteStates = reversedStates.slice(0, infiniteIndex);\n        const duration = parentDuration || finiteStates.reduce((prev, cur) => {\n            return (cur[DELAY] + prev * (cur[ITERATION_COUNT] as number)) / cur[PLAY_SPEED];\n        }, originalDuration);\n        const delay = reversedStates.slice(infiniteIndex).reduce((prev, cur) => {\n            return (prev + cur[DELAY]) / cur[PLAY_SPEED];\n        }, 0);\n        const easingName = find(reversedStates, state => (state[EASING] && state[EASING_NAME]), itemState)[EASING_NAME];\n        const iterationCount = reversedStates[infiniteIndex][ITERATION_COUNT];\n        const fillMode = superParent[FILL_MODE];\n        const direction = reversedStates[infiniteIndex][DIRECTION];\n        const cssText = makeAnimationProperties({\n            fillMode,\n            direction,\n            iterationCount,\n            delay: `${delay}s`,\n            name: `${PREFIX}KEYFRAMES_${id}`,\n            duration: `${duration / superParent[PLAY_SPEED]}s`,\n            timingFunction: easingName,\n        });\n        const selectors = splitComma(selector).map(sel => {\n            const matches = /([\\s\\S]+)(:+[a-zA-Z]+)$/g.exec(sel);\n\n            if (matches) {\n                return [matches[1], matches[2]];\n            } else {\n                return [sel, \"\"];\n            }\n        });\n        const className = playCondition.className;\n        const selectorCallback = playCondition.selector;\n        const preselector = isFunction(selectorCallback) ? selectorCallback(this, selector) : selectorCallback;\n\n        return `\n    ${preselector || selectors.map(([sel, peusdo]) => `${sel}.${className}${peusdo}`)} {${cssText}}\n    ${selectors.map(([sel, peusdo]) => `${sel}.${PAUSE_ANIMATION}${peusdo}`)} {${ANIMATION}-play-state: paused;}\n    @${KEYFRAMES} ${PREFIX}KEYFRAMES_${id}{${this._toKeyframes(duration, finiteStates, direction)}}`;\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {SceneItem} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition,\n        duration?: number, options?: AnimatorState[]) {\n        if (!this.elements.length) {\n            return \"\";\n        }\n        const css = this.toCSS(playCondition, duration, options);\n        const isParent = options && !isUndefined(options[ITERATION_COUNT]);\n\n        if (!isParent) {\n            if (this.styledInjector) {\n                this.styledInjector.destroy();\n                this.styledInjector = null;\n            }\n            this.styled = styled(css);\n            this.styledInjector = this.styled.inject(this.getAnimationElement(), { original: true });\n        }\n        return this;\n    }\n    public pause() {\n        super.pause();\n        isPausedCSS(this) && this.pauseCSS();\n        return this;\n    }\n    public pauseCSS() {\n        this.elements.forEach(element => {\n            addClass(element, PAUSE_ANIMATION);\n        });\n        return this;\n    }\n    public endCSS() {\n        this.elements.forEach(element => {\n            removeClass(element, PAUSE_ANIMATION);\n            removeClass(element, START_ANIMATION);\n        });\n        setPlayCSS(this, false);\n        return this;\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    /**\n      * Play using the css animation and keyframes.\n      * @param - Check if you want to export css.\n      * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n      * @param - The shorthand properties for six of the animation properties.\n      * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n      * @example\n  item.playCSS();\n  item.playCSS(false, \"startAnimation\", {\n      direction: \"reverse\",\n      fillMode: \"forwards\",\n  });\n      */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: object = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public getAnimationElement(): AnimateElement {\n        return this.elements[0];\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        const elements = this.elements;\n        const length = elements.length;\n        const cssText = makeAnimationProperties(properties);\n\n        if (!length) {\n            return;\n        }\n        if (isPaused) {\n            elements.forEach(element => {\n                removeClass(element, PAUSE_ANIMATION);\n            });\n        } else {\n            elements.forEach(element => {\n                element.style.cssText += cssText;\n\n                if (hasClass(element, START_ANIMATION)) {\n                    removeClass(element, START_ANIMATION);\n                }\n            });\n            elements.forEach(element => {\n                element.clientWidth;\n            });\n            elements.forEach(element => {\n                addClass(element, START_ANIMATION);\n            });\n        }\n        return elements[0];\n    }\n    /**\n      * Clear All Frames\n      * @return {SceneItem} An instance itself\n      */\n    public clear() {\n        this.times = [];\n        this.items = {};\n        this.nameMap = new OrderMap(NAME_SEPARATOR);\n\n        if (this.styledInjector) {\n            this.styledInjector.destroy();\n        }\n        this.styled = null;\n        this.styledInjector = null;\n        this.temp = null;\n        this.needUpdate = true;\n        return this;\n    }\n    public getNowValue(\n        time: number,\n        properties: NameType[],\n        left?: number,\n        right?: number,\n        isAccurate?: boolean,\n        easing?: EasingType,\n        usePrevValue?: boolean,\n    ) {\n        const times = this.times;\n        const length = times.length;\n\n        let prevTime: number;\n        let nextTime: number;\n        let prevFrame: Frame;\n        let nextFrame: Frame;\n        const isUndefinedLeft = isUndefined(left);\n        const isUndefinedRight = isUndefined(right);\n        if (isUndefinedLeft || isUndefinedRight) {\n            const indicies = getNearTimeIndex(times, time);\n            isUndefinedLeft && (left = indicies[0]);\n            isUndefinedRight && (right = indicies[1]);\n        }\n\n        for (let i = left; i >= 0; --i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                prevTime = times[i];\n                prevFrame = frame;\n                break;\n            }\n        }\n        const prevValue = prevFrame && prevFrame.raw(...properties);\n\n        if (isAccurate && !isRole([properties[0]])) {\n            return prevTime === time ? prevValue : undefined;\n        }\n        if (usePrevValue) {\n            return prevValue;\n        }\n        for (let i = right; i < length; ++i) {\n            const frame = this.getFrame(times[i]);\n\n            if (frame.has(...properties)) {\n                nextTime = times[i];\n                nextFrame = frame;\n                break;\n            }\n        }\n        const nextValue = nextFrame && nextFrame.raw(...properties);\n\n        if (!prevFrame || isUndefined(prevValue)) {\n            return nextValue;\n        }\n        if (!nextFrame || isUndefined(nextValue) || prevValue === nextValue) {\n            return prevValue;\n        }\n        return dotValue(time, Math.max(prevTime, 0), nextTime, prevValue, nextValue, easing);\n    }\n    private _toKeyframes(duration: number, states: AnimatorState[], direction: DirectionType) {\n        const frames: IObject<string> = {};\n        const times = this.times.slice();\n\n        if (!times.length) {\n            return \"\";\n        }\n        const originalDuration = this.getDuration();\n        (!this.getFrame(0)) && times.unshift(0);\n        (!this.getFrame(originalDuration)) && times.push(originalDuration);\n        const entries = getEntries(times, states);\n        const lastEntry = entries[entries.length - 1];\n\n        // end delay time\n        lastEntry[0] < duration && addEntry(entries, duration, lastEntry[1]);\n        let prevTime = -1;\n\n        return entries.map(([time, keytime]) => {\n            if (!frames[keytime]) {\n                frames[keytime] =\n                    (!this.hasFrame(keytime) || keytime === 0 || keytime === originalDuration ?\n                        this.getNowFrame(keytime) : this.getNowFrame(keytime, 0, true)).toCSS();\n            }\n\n            let frameTime = time / duration * 100;\n\n            if (frameTime - prevTime < THRESHOLD) {\n                frameTime += THRESHOLD;\n            }\n            prevTime = frameTime;\n            return `${Math.min(frameTime, 100)}%{\n                ${time === 0 && !isDirectionReverse(0, 1, direction) ? \"\" : frames[keytime]}\n            }`;\n        }).join(\"\");\n    }\n    private updateFrameOrders() {\n        const nameMap = this.nameMap.orderMap;\n\n        this.forEach(frame => {\n            frame.setOrderObject(nameMap);\n        });\n    }\n}\n\nexport default SceneItem;\n","import Animator from \"./Animator\";\nimport SceneItem from \"./SceneItem\";\nimport { SELECTOR, DURATION, DELAY, RUNNING, NAME_SEPARATOR } from \"./consts\";\nimport { playCSS, getRealId, isPausedCSS, isEndedCSS, setPlayCSS, isScene, flatSceneObject } from \"./utils\";\nimport { isFunction, IS_WINDOW, IObject, $, IArrayFormat } from \"@daybrush/utils\";\nimport {\n    AnimateElement, SceneState, SceneOptions, EasingType,\n    AnimatorState, SceneItemOptions, PlayCondition, NameType, SceneEvents\n} from \"./types\";\nimport Frame from \"./Frame\";\nimport OrderMap from \"order-map\";\nimport styled, { InjectResult, StyledInjector } from \"css-styled\";\n/**\n * manage sceneItems and play Scene.\n * @extends Animator\n * @sort 1\n */\nclass Scene extends Animator<SceneOptions, SceneState, SceneEvents> {\n    /**\n    * version info\n    * @type {string}\n    * @example\n    * Scene.VERSION // #__VERSION__#\n    */\n    public static VERSION: string = \"#__VERSION__#\";\n    public items: IObject<Scene | SceneItem> = {};\n    public orderMap = new OrderMap(NAME_SEPARATOR);\n    public styled: StyledInjector;\n    public styledInjector: InjectResult;\n    public temp: IObject<Frame>;\n    /**\n    * @param - properties\n    * @param - options\n    * @example\n    const scene = new Scene({\n      item1: {\n        0: {\n          display: \"none\",\n        },\n        1: {\n          display: \"block\",\n          opacity: 0,\n        },\n        2: {\n          opacity: 1,\n        },\n      },\n      item2: {\n        2: {\n          opacity: 1,\n        },\n      }\n    });\n      */\n    constructor(properties?: { options?: Partial<SceneOptions> } & IObject<any>, options?: Partial<SceneOptions>) {\n        super();\n        this.load(properties, options);\n    }\n    public getDuration() {\n        let time = 0;\n\n        this.forEach(item => {\n            time = Math.max(time, item.getTotalDuration() / item.getPlaySpeed());\n        });\n        return time || this.state[DURATION];\n    }\n    public setDuration(duration: number) {\n        const items = this.items;\n        const sceneDuration = this.getDuration();\n\n        if (duration === 0 || !isFinite(sceneDuration)) {\n            return this;\n        }\n        if (sceneDuration === 0) {\n            this.forEach(item => {\n                item.setDuration(duration);\n            });\n        } else {\n            const ratio = duration / sceneDuration;\n\n            this.forEach(item => {\n                item.setDelay(item.getDelay() * ratio);\n                item.setDuration(item.getDuration() * ratio);\n            });\n        }\n        super.setDuration(duration);\n        return this;\n    }\n    public getItem<T extends (Scene | SceneItem) = Scene | SceneItem>(name: number | string): T;\n    /**\n    * get item in scene by name\n    * @param - The item's name\n    * @return {Scene | SceneItem} item\n    * @example\n    const item = scene.getItem(\"item1\")\n    */\n    public getItem(name: number | string) {\n        return this.items[name];\n    }\n    /**\n    * create item in scene\n    * @param {} name - name of item to create\n    * @param {} options - The option object of SceneItem\n    * @return {} Newly created item\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public newItem(name: number | string, options: Partial<SceneItemOptions> = {}): Scene | SceneItem {\n        if (this.items[name]) {\n            return this.items[name];\n        }\n        const item = new SceneItem();\n\n        this.setItem(name, item);\n        item.setOptions(options);\n\n        return item;\n    }\n    /**\n    * remove item in scene\n    * @param - name of item to remove\n    * @return  An instance itself\n    * @example\n    const item = scene.newItem(\"item1\")\n\n    scene.removeItem(\"item1\");\n    */\n    public removeItem(name: number | string): this {\n        delete this.items[name];\n\n        this.orderMap.remove([name]);\n        return this;\n    }\n    /**\n    * add a sceneItem to the scene\n    * @param - name of item to create\n    * @param - sceneItem\n    * @example\n    const item = scene.newItem(\"item1\")\n    */\n    public setItem(name: number | string, item: Scene | SceneItem) {\n        item.setId(name);\n        this.items[name] = item;\n\n        this.orderMap.add([name]);\n        return this;\n    }\n    /**\n    * Get the current computed frames. (If needUpdate is true, get a new computed frames, not the temp that has already been saved.)\n    */\n    public getCurrentFrames(needUpdate?: boolean, parentEasing?: EasingType) {\n        const easing = this.getEasing() || parentEasing;\n        const frames: IObject<any> = {};\n\n        this.forEach(item => {\n            const id = item.getId();\n\n            if (isScene(item)) {\n                frames[id] = item.getCurrentFrames(needUpdate, easing);\n            } else {\n                frames[id] = item.getCurrentFrame(needUpdate, easing);\n            }\n        });\n        this.temp = frames;\n\n        return frames;\n    }\n    /**\n   * Get the current flatted computed frames. (If needUpdate is true, get a new computed frames, not the temp that has already been saved.)\n   * If there is a scene in the scene, you can get a flatted frame map.\n   * @example\n   * import Scene, { NAME_SEPARATOR } from \"scenejs\";\n   *\n   * {\n   *   \"a\": Frame,\n   *   \"b\": {\n   *     \"b1\": Frame,\n   *     \"b2\": Frame,\n   *   },\n   * }\n   * const frames = scene.getCurrentFrames();\n   * {\n   *   \"a\": Frame,\n   *   \"b_///_b1\": Frame,\n   *   \"b_///_b2\": Frame,\n   * }\n   * const frames = scene.getCurrentFlattedFrames();\n   *\n   */\n    public getCurrentFlattedFrames(needUpdate?: boolean, parentEasing?: EasingType): Record<string, Frame> {\n        const frames = this.getCurrentFrames(needUpdate, parentEasing);\n\n        return flatSceneObject(frames, NAME_SEPARATOR);\n    }\n    public setTime(time: number | string, isTick?: boolean, isParent?: boolean, parentEasing?: EasingType) {\n        super.setTime(time, isTick, isParent);\n\n        const iterationTime = this.getIterationTime();\n        const easing = this.getEasing() || parentEasing;\n\n        this.forEach(item => {\n            item.setTime(iterationTime * item.getPlaySpeed() - item.getDelay(), isTick, true, easing);\n        });\n\n        const frames = this.getCurrentFrames(false, parentEasing);\n\n        /**\n         * This event is fired when timeupdate and animate.\n         * @event Scene#animate\n         * @param {object} param The object of data to be sent to an event.\n         * @param {number} param.currentTime The total time that the animator is running.\n         * @param {number} param.time The iteration time during duration that the animator is running.\n         * @param {object} param.frames frames of that time.\n         * @example\nconst scene = new Scene({\n    a: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    },\n    b: {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        }\n    }\n}).on(\"animate\", e => {\n    console.log(e.frames);\n    // {a: Frame, b: Frame}\n    console.log(e.frames.a.get(\"opacity\"));\n});\n             */\n        this.trigger(\"animate\", {\n            frames,\n            currentTime: this.getTime(),\n            time: iterationTime,\n        });\n\n        return this;\n    }\n    /**\n     * executes a provided function once for each scene item.\n     * @param - Function to execute for each element, taking three arguments\n     * @return {Scene} An instance itself\n     */\n    public forEach(\n        func: (\n            item: Scene | SceneItem,\n            id: string | number,\n            index: number,\n            items: IObject<Scene | SceneItem>,\n        ) => void,\n    ) {\n        const items = this.items;\n        this.getOrders().forEach((id, index) => {\n            func(items[id], id, index, items);\n        });\n        return this;\n    }\n    public toCSS(\n        playCondition?: PlayCondition,\n        duration: number = this.getDuration(), parentStates: AnimatorState[] = []) {\n        const totalDuration = !duration || !isFinite(duration) ? 0 : duration;\n        const styles: string[] = [];\n        const state = this.state;\n\n        state[DURATION] = this.getDuration();\n\n        this.forEach(item => {\n            styles.push(item.toCSS(playCondition, totalDuration, parentStates.concat(state)));\n        });\n        return styles.join(\"\");\n    }\n    /**\n     * Export the CSS of the items to the style.\n     * @param - Add a selector or className to play.\n     * @return {Scene} An instance itself\n     */\n    public exportCSS(\n        playCondition?: PlayCondition, duration?: number, parentStates?: AnimatorState[]) {\n        const css = this.toCSS(playCondition, duration, parentStates);\n\n        if (!parentStates || !parentStates.length) {\n            if (this.styledInjector) {\n                this.styledInjector.destroy();\n                this.styledInjector = null;\n            }\n            this.styled = styled(css);\n            this.styledInjector = this.styled.inject(this.getAnimationElement(), { original: true });\n            // && exportCSS(getRealId(this), css);\n        }\n        return this;\n    }\n    public append(item: SceneItem | Scene) {\n        item.setDelay(item.getDelay() + this.getDuration());\n        this.setItem(getRealId(item), item);\n    }\n    public pauseCSS() {\n        return this.forEach(item => {\n            item.pauseCSS();\n        });\n    }\n    public pause() {\n        super.pause();\n\n        isPausedCSS(this) && this.pauseCSS();\n        this.forEach(item => {\n            item.pause();\n        });\n        return this;\n    }\n    public endCSS() {\n        this.forEach(item => {\n            item.endCSS();\n        });\n        setPlayCSS(this, false);\n    }\n    public end() {\n        isEndedCSS(this) && this.endCSS();\n        super.end();\n        return this;\n    }\n    /**\n  * get item orders\n  * @example\n  scene.getOrders() // => [\"item1\", \"item2\"]\n  */\n    public getOrders(): NameType[] {\n        return this.orderMap.get([]) || [];\n    }\n    /**\n      * set item orders\n      * @param - orders\n      * @example\n      frame.setOrders([\"item2\", \"item1\"]) // => [\"item2\", \"item1\"]\n      */\n    public setOrders(orders: NameType[]): NameType[] {\n        return this.orderMap.set([], orders);\n    }\n    public getAnimationElement() {\n        let animtionElement: AnimateElement;\n\n        this.forEach(item => {\n            const el = item.getAnimationElement();\n\n            !animtionElement && (animtionElement = el);\n        });\n        return animtionElement;\n    }\n    public addPlayClass(isPaused: boolean, playClassName?: string, properties: object = {}) {\n        let animtionElement: AnimateElement;\n\n        this.forEach(item => {\n            const el = item.addPlayClass(isPaused, playClassName, properties);\n\n            !animtionElement && (animtionElement = el);\n        });\n        return animtionElement;\n    }\n    /**\n    * Play using the css animation and keyframes.\n    * @param - Check if you want to export css.\n    * @param [playClassName=\"startAnimation\"] - Add a class name to play.\n    * @param - The shorthand properties for six of the animation properties.\n    * @return {Scene} An instance itself\n    * @see {@link https://www.w3schools.com/cssref/css3_pr_animation.asp}\n    * @example\n    scene.playCSS();\n    scene.playCSS(false, {\n    direction: \"reverse\",\n    fillMode: \"forwards\",\n    });\n    */\n    public playCSS(isExportCSS = true, playClassName?: string, properties: Partial<AnimatorState> = {}) {\n        playCSS(this, isExportCSS, playClassName, properties);\n        return this;\n    }\n    public set(properties: any, ...args: any[]): this;\n    /**\n      * Set properties to the Scene.\n      * @param - properties\n      * @return An instance itself\n      * @example\nscene.set({\n    \".a\": {\n        0: {\n            opacity: 0,\n        },\n        1: {\n            opacity: 1,\n        },\n    },\n});\n// 0\nconsole.log(scene.getItem(\".a\").get(0, \"opacity\"));\n// 1\nconsole.log(scene.getItem(\".a\").get(1, \"opacity\"));\n      */\n    public set(properties: any) {\n        this.load(properties);\n        return this;\n    }\n    /**\n      * Clear All Items\n      * @return {Scene} An instance itself\n      */\n    public clear() {\n        this.finish();\n        this.items = {};\n        this.orderMap = new OrderMap(NAME_SEPARATOR);\n\n        if (this.styledInjector) {\n            this.styledInjector.destroy();\n        }\n        this.styled = null;\n        this.styledInjector = null;\n    }\n    public load(properties: any = {}, options = properties.options) {\n        if (!properties) {\n            return this;\n        }\n        const selector = options && options[SELECTOR] || this.state[SELECTOR];\n        for (const name in properties) {\n            if (name === \"options\") {\n                continue;\n            }\n            const object = properties[name];\n            let item;\n\n            if (object instanceof Scene || object instanceof SceneItem) {\n                this.setItem(name, object);\n                item = object;\n            } else if (isFunction(object) && selector) {\n                const elements =\n                    IS_WINDOW\n                        ? $(`${isFunction(selector) ? selector(name) : name}`, true) as IArrayFormat<AnimateElement>\n                        : ([] as AnimateElement[]);\n                const length = elements.length;\n                const scene = new Scene();\n\n                for (let i = 0; i < length; ++i) {\n                    (scene.newItem(i) as SceneItem).setId().setElement(elements[i]).load(object(i, elements[i]));\n                }\n                this.setItem(name, scene);\n                continue;\n            } else {\n                item = this.newItem(name);\n                item.load(object);\n            }\n            selector && item.setSelector(selector);\n        }\n        this.setOptions(options);\n    }\n    public setOptions(options: Partial<SceneState> = {}): this {\n        super.setOptions(options);\n\n        const selector = options.selector;\n\n        if (selector) {\n            this.state[SELECTOR] = selector;\n        }\n        return this;\n    }\n    public setSelector(target?: string | boolean | ((id: number | string) => string)) {\n        const state = this.state;\n        const selector = target || state[SELECTOR];\n\n        state[SELECTOR] = selector;\n        const isItFunction = isFunction(target);\n        if (selector) {\n            this.forEach((item, name) => {\n                item.setSelector(isItFunction ? (target as (id: number | string) => string)(name) : selector);\n            });\n        }\n        return this;\n    }\n    public start(delay: number = this.state[DELAY]): boolean {\n        const result = super.start(delay);\n\n        if (result) {\n            this.forEach(item => {\n                item.start(0);\n            });\n        } else {\n            this.forEach(item => {\n                item.setPlayState(RUNNING);\n            });\n        }\n        return result;\n    }\n}\n\nexport default Scene;\n","import { IObject } from \"@daybrush/utils\";\nimport Scene from \"./Scene\";\nimport SceneItem from \"./SceneItem\";\nimport { SceneOptions, SceneItemOptions } from \"./types\";\n\nexport function animate(properties?: IObject<any>, options?: Partial<SceneOptions>) {\n    return new Scene(properties, options).play();\n}\nexport function animateItem(properties?: IObject<any>, options?: Partial<SceneItemOptions>) {\n    return new SceneItem(properties, options).play();\n}\n","import Scene, * as others from \"./index\";\n\nfor (const name in others) {\n    (Scene as any)[name] = (others as any)[name];\n}\n\nexport default Scene;\n"],"names":["cubic","y1","y2","t","t2","solveFromX","x1","x2","x","solveX","dx","Math","abs","bezier","func","between","easingName","steps","count","position","time","level","floor","STEP_START","STEP_END","LINEAR","EASE","EASE_IN","EASE_OUT","EASE_IN_OUT","PREFIX","DATA_SCENE_ID","TIMING_FUNCTION","ROLES","transform","filter","attribute","html","ALIAS","easing","FIXED","_a","MAXIMUM","THRESHOLD","DURATION","FILL_MODE","DIRECTION","ITERATION_COUNT","DELAY","EASING","PLAY_SPEED","EASING_NAME","ITERATION_TIME","PAUSED","ENDED","TIMEUPDATE","ANIMATE","PLAY","RUNNING","ITERATION","START_ANIMATION","PAUSE_ANIMATION","ALTERNATE","REVERSE","ALTERNATE_REVERSE","NORMAL","INFINITE","PLAY_STATE","PLAY_CSS","PREV_TIME","TICK_TIME","CURRENT_TIME","SELECTOR","TRANSFORM_NAME","EASINGS","NAME_SEPARATOR","OPTIONS","EVENTS","value","options","setOptions","isString","split","separator","newOptions","name","length","index","prefix","suffix","model","type","arr","map","v","PropertyObject","clone","join","toValue","forEach","splitStyle","str","properties","splitText","obj","totalLength","i","matches","trim","toPropertyObject","styles","arrayToColorObject","RGBA","stringToBracketObject","text","splitBracket","afterModel","COLOR_MODELS","indexOf","stringToRGBA","arrayToPropertyObject","stringToColorObject","result","isArray","values","splitComma","splitSpace","exec","charAt","toObject","object","size","get","isPropertyObject","setAlias","alias","setRole","names","isProperty","isFixedProperty","roles","fixed","getType","OBJECT","ARRAY","PROPERTY","STRING","NUMBER","isPureObject","isObject","constructor","Object","getNames","stack","push","concat","pop","slice","updateFrame","toFixed","num","round","getValueByNames","undefined","isInProperties","args","isLast","role","isRole","isFixed","setPlayCSS","item","isActivate","state","isPausedCSS","isPaused","isEndedCSS","isEnded","makeId","selector","id","random","IS_WINDOW","checkElement","$","getRealId","getId","setId","toId","match","playCSS","isExportCSS","playClassName","ANIMATION","getPlayState","className","addPlayClass","setTime","exportCSS","el","addAnimationEvent","setPlayState","duration","getDuration","isZeroDuration","isFinite","animationend","finish","animationstart","trigger","addEvent","animationiteration","once","removeEvent","elapsedTime","currentTime","iterationCount","setIteration","getEasing","curveArray","parseFloat","isScene","prototype","getItem","isSceneItem","getFrame","isFrame","toCSS","flatSceneObject","seperator","newObj","nextObj","nextName","GetterSetter","getter","setter","parent","camelize","isDirectionReverse","iteration","iteraiontCount","direction","setters","getters","__extends","_super","_this","delay","fillMode","playSpeed","iterationTime","tickTime","prevTime","playState","setEasing","setDuration","getActiveDuration","Infinity","getTime","toTime","timerId","requestAnimationFrame","tick","start","cancelAnimationFrame","end","pause","isTick","isParent","activeDuration","getUnitTime","calculate","isDelay","getIterationTime","splitUnit","unit","passIterationCount","maxIterationCount","currentIterationTime","setIterationTime","isReverse","isFiniteDuration","isForwards","now","to","min","Animator","EventEmitter","toInnerProperties","orders","arrObj","keys","getKeys","sortOrders","replace","target","merge","from","FUNCTION","getValue","getPropertyName","OrderMap","set","_i","raw","orderMap","getObject","setObject","key","nextValue","children","gets","params","remove","self","firstParam","Frame","_set","has","stylesLength","isUndefined","frame","setOrderObject","frameProperties","cssObject","FILTER","TRANSFORM","toCSSObject","cssArray","clear","lastParam","add","dotArray","a1","a2","b1","b2","v1","dot","dotColor","color1","color2","value1","value2","model1","model2","colorModel","parseInt","dotObject","a1Type","type1","type2","isFunction1","isFunction2","v2","isNaN","dotNumber","dotValue","nextTime","prevValue","ratio","getNearTimeIndex","times","makeAnimationProperties","decamelize","addTime","splice","addEntry","entries","keytime","prevEntry","getEntries","states","nextEntries","intCount","ceil","currentDuration","lastTime","j","entry","divideTime","unshift","load","originalDuration","ratio_1","items_1","obj_1","time2","items","newFrame","elements","sceneId_1","element","setAttribute","SceneItem","eachTime","realTime","innerValue","value_1","getDelay","frames","hasFrame","getDirection","frameTime","needUpdate","update","nameMap","updateFrameOrders","removeFrame","append","unshiftTime","firstFrame","prepend","isStartZero","isFunction","setElement","toArray","Element","style","targetFunc","attributes","html_1","innerHTML","cssText","fromCSS","parentEasing","getNowFrame","temp","prevNameMap","pushKeys","nextMap","setFrame","toFrame","isAccurate","left","right","realEasing","hasName","nowEasing","getNowValue","prevFrame_1","prevOrderMap","getComputedFrame","keyframes","callback","setTarget","setSelector","playCondition","parentDuration","itemState","reversedStates","reverse","superParent","infiniteIndex","findIndex","finiteStates","reduce","prev","cur","find","timingFunction","selectors","sel","selectorCallback","preselector","peusdo","KEYFRAMES","_toKeyframes","css","styledInjector","destroy","styled","inject","getAnimationElement","original","pauseCSS","addClass","removeClass","endCSS","hasClass","clientWidth","usePrevValue","prevFrame","nextFrame","isUndefinedLeft","isUndefinedRight","indicies","max","lastEntry","getTotalDuration","getPlaySpeed","sceneDuration","setDelay","setItem","getCurrentFrames","getCurrentFrame","getOrders","parentStates","totalDuration","animtionElement","Scene","scene","newItem","isItFunction","animate","play","animateItem","others"],"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"}